{"ast":null,"code":"import { hasOwnProperty, keys } from './object';\nimport { isArray, isDate, isObject } from './inspect'; // Assumes both a and b are arrays!\n// Handles when arrays are \"sparse\" (array.every(...) doesn't handle sparse)\n\nvar compareArrays = function compareArrays(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var equal = true;\n\n  for (var i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n\n  return equal;\n};\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n * Returns boolean true or false\n */\n\n\nexport var looseEqual = function looseEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  var aValidType = isDate(a);\n  var bValidType = isDate(b);\n\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? compareArrays(a, b) : false;\n  }\n\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n\n  if (aValidType || bValidType) {\n    /* istanbul ignore if: this if will probably never be called */\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n\n    var aKeysCount = keys(a).length;\n    var bKeysCount = keys(b).length;\n\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n\n    for (var key in a) {\n      var aHasKey = hasOwnProperty(a, key);\n      var bHasKey = hasOwnProperty(b, key);\n\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n\n  return String(a) === String(b);\n};","map":{"version":3,"names":["hasOwnProperty","keys","isArray","isDate","isObject","compareArrays","a","b","length","equal","i","looseEqual","aValidType","bValidType","getTime","aKeysCount","bKeysCount","key","aHasKey","bHasKey","String"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/utils/loose-equal.js"],"sourcesContent":["import { hasOwnProperty, keys } from './object';\nimport { isArray, isDate, isObject } from './inspect'; // Assumes both a and b are arrays!\n// Handles when arrays are \"sparse\" (array.every(...) doesn't handle sparse)\n\nvar compareArrays = function compareArrays(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var equal = true;\n\n  for (var i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n\n  return equal;\n};\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n * Returns boolean true or false\n */\n\n\nexport var looseEqual = function looseEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  var aValidType = isDate(a);\n  var bValidType = isDate(b);\n\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? compareArrays(a, b) : false;\n  }\n\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n\n  if (aValidType || bValidType) {\n    /* istanbul ignore if: this if will probably never be called */\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n\n    var aKeysCount = keys(a).length;\n    var bKeysCount = keys(b).length;\n\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n\n    for (var key in a) {\n      var aHasKey = hasOwnProperty(a, key);\n      var bHasKey = hasOwnProperty(b, key);\n\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n\n  return String(a) === String(b);\n};"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,IAAzB,QAAqC,UAArC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,QAA1B,QAA0C,WAA1C,C,CAAuD;AACvD;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;EAC/C,IAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;IACzB,OAAO,KAAP;EACD;;EAED,IAAIC,KAAK,GAAG,IAAZ;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBD,KAAK,IAAIC,CAAC,GAAGJ,CAAC,CAACE,MAA/B,EAAuCE,CAAC,EAAxC,EAA4C;IAC1CD,KAAK,GAAGE,UAAU,CAACL,CAAC,CAACI,CAAD,CAAF,EAAOH,CAAC,CAACG,CAAD,CAAR,CAAlB;EACD;;EAED,OAAOD,KAAP;AACD,CAZD;AAaA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,IAAIE,UAAU,GAAG,SAASA,UAAT,CAAoBL,CAApB,EAAuBC,CAAvB,EAA0B;EAChD,IAAID,CAAC,KAAKC,CAAV,EAAa;IACX,OAAO,IAAP;EACD;;EAED,IAAIK,UAAU,GAAGT,MAAM,CAACG,CAAD,CAAvB;EACA,IAAIO,UAAU,GAAGV,MAAM,CAACI,CAAD,CAAvB;;EAEA,IAAIK,UAAU,IAAIC,UAAlB,EAA8B;IAC5B,OAAOD,UAAU,IAAIC,UAAd,GAA2BP,CAAC,CAACQ,OAAF,OAAgBP,CAAC,CAACO,OAAF,EAA3C,GAAyD,KAAhE;EACD;;EAEDF,UAAU,GAAGV,OAAO,CAACI,CAAD,CAApB;EACAO,UAAU,GAAGX,OAAO,CAACK,CAAD,CAApB;;EAEA,IAAIK,UAAU,IAAIC,UAAlB,EAA8B;IAC5B,OAAOD,UAAU,IAAIC,UAAd,GAA2BR,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAxC,GAAiD,KAAxD;EACD;;EAEDK,UAAU,GAAGR,QAAQ,CAACE,CAAD,CAArB;EACAO,UAAU,GAAGT,QAAQ,CAACG,CAAD,CAArB;;EAEA,IAAIK,UAAU,IAAIC,UAAlB,EAA8B;IAC5B;IACA,IAAI,CAACD,UAAD,IAAe,CAACC,UAApB,EAAgC;MAC9B,OAAO,KAAP;IACD;;IAED,IAAIE,UAAU,GAAGd,IAAI,CAACK,CAAD,CAAJ,CAAQE,MAAzB;IACA,IAAIQ,UAAU,GAAGf,IAAI,CAACM,CAAD,CAAJ,CAAQC,MAAzB;;IAEA,IAAIO,UAAU,KAAKC,UAAnB,EAA+B;MAC7B,OAAO,KAAP;IACD;;IAED,KAAK,IAAIC,GAAT,IAAgBX,CAAhB,EAAmB;MACjB,IAAIY,OAAO,GAAGlB,cAAc,CAACM,CAAD,EAAIW,GAAJ,CAA5B;MACA,IAAIE,OAAO,GAAGnB,cAAc,CAACO,CAAD,EAAIU,GAAJ,CAA5B;;MAEA,IAAIC,OAAO,IAAI,CAACC,OAAZ,IAAuB,CAACD,OAAD,IAAYC,OAAnC,IAA8C,CAACR,UAAU,CAACL,CAAC,CAACW,GAAD,CAAF,EAASV,CAAC,CAACU,GAAD,CAAV,CAA7D,EAA+E;QAC7E,OAAO,KAAP;MACD;IACF;EACF;;EAED,OAAOG,MAAM,CAACd,CAAD,CAAN,KAAcc,MAAM,CAACb,CAAD,CAA3B;AACD,CA9CM"},"metadata":{},"sourceType":"module"}