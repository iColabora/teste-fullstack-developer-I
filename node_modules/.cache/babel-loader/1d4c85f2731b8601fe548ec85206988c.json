{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar _watch;\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // Tagged input form control\n// Based loosely on https://adamwathan.me/renderless-components-in-vuejs/\n\n\nimport { Vue } from '../../vue';\nimport { NAME_FORM_TAGS } from '../../constants/components';\nimport { EVENT_NAME_BLUR, EVENT_NAME_FOCUS, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_TAG_STATE, EVENT_OPTIONS_PASSIVE } from '../../constants/events';\nimport { CODE_BACKSPACE, CODE_DELETE, CODE_ENTER } from '../../constants/key-codes';\nimport { PROP_TYPE_ARRAY, PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_FUNCTION, PROP_TYPE_NUMBER, PROP_TYPE_OBJECT, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACES } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_ADD_BUTTON_TEXT } from '../../constants/slots';\nimport { arrayIncludes, concat } from '../../utils/array';\nimport { cssEscape } from '../../utils/css-escape';\nimport { attemptBlur, attemptFocus, closest, matches, requestAF, select } from '../../utils/dom';\nimport { eventOn, eventOff, stopEvent } from '../../utils/events';\nimport { identity } from '../../utils/identity';\nimport { isEvent, isNumber, isString } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { makeModelMixin } from '../../utils/model';\nimport { omit, pick, sortKeys } from '../../utils/object';\nimport { hasPropFunction, makeProp, makePropsConfigurable } from '../../utils/props';\nimport { escapeRegExp, toString, trim, trimLeft } from '../../utils/string';\nimport { formControlMixin, props as formControlProps } from '../../mixins/form-control';\nimport { formSizeMixin, props as formSizeProps } from '../../mixins/form-size';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { listenersMixin } from '../../mixins/listeners';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BButton } from '../button/button';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormText } from '../form/form-text';\nimport { BFormTag } from './form-tag'; // --- Constants ---\n\nvar _makeModelMixin = makeModelMixin('value', {\n  type: PROP_TYPE_ARRAY,\n  defaultValue: []\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event; // Supported input types (for built in input)\n\n\nvar TYPES = ['text', 'email', 'tel', 'url', 'number']; // Default ignore input focus selector\n\nvar DEFAULT_INPUT_FOCUS_SELECTOR = ['.b-form-tag', 'button', 'input', 'select'].join(' '); // --- Helper methods ---\n// Escape special chars in string and replace\n// contiguous spaces with a whitespace match\n\nvar escapeRegExpChars = function escapeRegExpChars(str) {\n  return escapeRegExp(str).replace(RX_SPACES, '\\\\s');\n}; // Remove leading/trailing spaces from array of tags and remove duplicates\n\n\nvar cleanTags = function cleanTags(tags) {\n  return concat(tags).map(function (tag) {\n    return trim(toString(tag));\n  }).filter(function (tag, index, arr) {\n    return tag.length > 0 && arr.indexOf(tag) === index;\n  });\n}; // Processes an input/change event, normalizing string or event argument\n\n\nvar processEventValue = function processEventValue(event) {\n  return isString(event) ? event : isEvent(event) ? event.target.value || '' : '';\n}; // Returns a fresh empty `tagsState` object\n\n\nvar cleanTagsState = function cleanTagsState() {\n  return {\n    all: [],\n    valid: [],\n    invalid: [],\n    duplicate: []\n  };\n}; // --- Props ---\n\n\nvar props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), formControlProps), formSizeProps), formStateProps), {}, {\n  addButtonText: makeProp(PROP_TYPE_STRING, 'Add'),\n  addButtonVariant: makeProp(PROP_TYPE_STRING, 'outline-secondary'),\n  // Enable change event triggering tag addition\n  // Handy if using <select> as the input\n  addOnChange: makeProp(PROP_TYPE_BOOLEAN, false),\n  duplicateTagText: makeProp(PROP_TYPE_STRING, 'Duplicate tag(s)'),\n  feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n  // Disable the input focus behavior when clicking\n  // on element matching the selector (or selectors)\n  ignoreInputFocusSelector: makeProp(PROP_TYPE_ARRAY_STRING, DEFAULT_INPUT_FOCUS_SELECTOR),\n  // Additional attributes to add to the input element\n  inputAttrs: makeProp(PROP_TYPE_OBJECT, {}),\n  inputClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  inputId: makeProp(PROP_TYPE_STRING),\n  inputType: makeProp(PROP_TYPE_STRING, 'text', function (value) {\n    return arrayIncludes(TYPES, value);\n  }),\n  invalidTagText: makeProp(PROP_TYPE_STRING, 'Invalid tag(s)'),\n  limit: makeProp(PROP_TYPE_NUMBER),\n  limitTagsText: makeProp(PROP_TYPE_STRING, 'Tag limit reached'),\n  // Disable ENTER key from triggering tag addition\n  noAddOnEnter: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Disable the focus ring on the root element\n  noOuterFocus: makeProp(PROP_TYPE_BOOLEAN, false),\n  noTagRemove: makeProp(PROP_TYPE_BOOLEAN, false),\n  placeholder: makeProp(PROP_TYPE_STRING, 'Add tag...'),\n  // Enable deleting last tag in list when CODE_BACKSPACE is\n  // pressed and input is empty\n  removeOnDelete: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Character (or characters) that trigger adding tags\n  separator: makeProp(PROP_TYPE_ARRAY_STRING),\n  tagClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tagPills: makeProp(PROP_TYPE_BOOLEAN, false),\n  tagRemoveLabel: makeProp(PROP_TYPE_STRING, 'Remove tag'),\n  tagRemovedLabel: makeProp(PROP_TYPE_STRING, 'Tag removed'),\n  tagValidator: makeProp(PROP_TYPE_FUNCTION),\n  tagVariant: makeProp(PROP_TYPE_STRING, 'secondary')\n})), NAME_FORM_TAGS); // --- Main component ---\n// @vue/component\n\nexport var BFormTags = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_TAGS,\n  mixins: [listenersMixin, idMixin, modelMixin, formControlMixin, formSizeMixin, formStateMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      hasFocus: false,\n      newTag: '',\n      tags: [],\n      // Tags that were removed\n      removedTags: [],\n      // Populated when tags are parsed\n      tagsState: cleanTagsState(),\n      focusState: null\n    };\n  },\n  computed: {\n    computedInputId: function computedInputId() {\n      return this.inputId || this.safeId('__input__');\n    },\n    computedInputType: function computedInputType() {\n      // We only allow certain types\n      return arrayIncludes(TYPES, this.inputType) ? this.inputType : 'text';\n    },\n    computedInputAttrs: function computedInputAttrs() {\n      var disabled = this.disabled,\n          form = this.form;\n      return _objectSpread(_objectSpread({}, this.inputAttrs), {}, {\n        // Must have attributes\n        id: this.computedInputId,\n        value: this.newTag,\n        disabled: disabled,\n        form: form\n      });\n    },\n    computedInputHandlers: function computedInputHandlers() {\n      return _objectSpread(_objectSpread({}, omit(this.bvListeners, [EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT])), {}, {\n        blur: this.onInputBlur,\n        change: this.onInputChange,\n        focus: this.onInputFocus,\n        input: this.onInputInput,\n        keydown: this.onInputKeydown,\n        reset: this.reset\n      });\n    },\n    computedSeparator: function computedSeparator() {\n      // Merge the array into a string\n      return concat(this.separator).filter(isString).filter(identity).join('');\n    },\n    computedSeparatorRegExp: function computedSeparatorRegExp() {\n      // We use a computed prop here to precompile the RegExp\n      // The RegExp is a character class RE in the form of `/[abc]+/`\n      // where a, b, and c are the valid separator characters\n      // -> `tags = str.split(/[abc]+/).filter(t => t)`\n      var separator = this.computedSeparator;\n      return separator ? new RegExp(\"[\".concat(escapeRegExpChars(separator), \"]+\")) : null;\n    },\n    computedJoiner: function computedJoiner() {\n      // When tag(s) are invalid or duplicate, we leave them\n      // in the input so that the user can see them\n      // If there are more than one tag in the input, we use the\n      // first separator character as the separator in the input\n      // We append a space if the first separator is not a space\n      var joiner = this.computedSeparator.charAt(0);\n      return joiner !== ' ' ? \"\".concat(joiner, \" \") : joiner;\n    },\n    computeIgnoreInputFocusSelector: function computeIgnoreInputFocusSelector() {\n      // Normalize to an single selector with selectors separated by `,`\n      return concat(this.ignoreInputFocusSelector).filter(identity).join(',').trim();\n    },\n    disableAddButton: function disableAddButton() {\n      var _this = this; // If 'Add' button should be disabled\n      // If the input contains at least one tag that can\n      // be added, then the 'Add' button should be enabled\n\n\n      var newTag = trim(this.newTag);\n      return newTag === '' || !this.splitTags(newTag).some(function (t) {\n        return !arrayIncludes(_this.tags, t) && _this.validateTag(t);\n      });\n    },\n    duplicateTags: function duplicateTags() {\n      return this.tagsState.duplicate;\n    },\n    hasDuplicateTags: function hasDuplicateTags() {\n      return this.duplicateTags.length > 0;\n    },\n    invalidTags: function invalidTags() {\n      return this.tagsState.invalid;\n    },\n    hasInvalidTags: function hasInvalidTags() {\n      return this.invalidTags.length > 0;\n    },\n    isLimitReached: function isLimitReached() {\n      var limit = this.limit;\n      return isNumber(limit) && limit >= 0 && this.tags.length >= limit;\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    this.tags = cleanTags(newValue);\n  }), _defineProperty(_watch, \"tags\", function tags(newValue, oldValue) {\n    // Update the `v-model` (if it differs from the value prop)\n    if (!looseEqual(newValue, this[MODEL_PROP_NAME])) {\n      this.$emit(MODEL_EVENT_NAME, newValue);\n    }\n\n    if (!looseEqual(newValue, oldValue)) {\n      newValue = concat(newValue).filter(identity);\n      oldValue = concat(oldValue).filter(identity);\n      this.removedTags = oldValue.filter(function (old) {\n        return !arrayIncludes(newValue, old);\n      });\n    }\n  }), _defineProperty(_watch, \"tagsState\", function tagsState(newValue, oldValue) {\n    // Emit a tag-state event when the `tagsState` object changes\n    if (!looseEqual(newValue, oldValue)) {\n      this.$emit(EVENT_NAME_TAG_STATE, newValue.valid, newValue.invalid, newValue.duplicate);\n    }\n  }), _watch),\n  created: function created() {\n    // We do this in created to make sure an input event emits\n    // if the cleaned tags are not equal to the value prop\n    this.tags = cleanTags(this[MODEL_PROP_NAME]);\n  },\n  mounted: function mounted() {\n    // Listen for form reset events, to reset the tags input\n    var $form = closest('form', this.$el);\n\n    if ($form) {\n      eventOn($form, 'reset', this.reset, EVENT_OPTIONS_PASSIVE);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    var $form = closest('form', this.$el);\n\n    if ($form) {\n      eventOff($form, 'reset', this.reset, EVENT_OPTIONS_PASSIVE);\n    }\n  },\n  methods: {\n    addTag: function addTag(newTag) {\n      newTag = isString(newTag) ? newTag : this.newTag;\n      /* istanbul ignore next */\n\n      if (this.disabled || trim(newTag) === '' || this.isLimitReached) {\n        // Early exit\n        return;\n      }\n\n      var parsed = this.parseTags(newTag); // Add any new tags to the `tags` array, or if the\n      // array of `allTags` is empty, we clear the input\n\n      if (parsed.valid.length > 0 || parsed.all.length === 0) {\n        // Clear the user input element (and leave in any invalid/duplicate tag(s)\n\n        /* istanbul ignore if: full testing to be added later */\n        if (matches(this.getInput(), 'select')) {\n          // The following is needed to properly\n          // work with `<select>` elements\n          this.newTag = '';\n        } else {\n          var invalidAndDuplicates = [].concat(_toConsumableArray(parsed.invalid), _toConsumableArray(parsed.duplicate));\n          this.newTag = parsed.all.filter(function (tag) {\n            return arrayIncludes(invalidAndDuplicates, tag);\n          }).join(this.computedJoiner).concat(invalidAndDuplicates.length > 0 ? this.computedJoiner.charAt(0) : '');\n        }\n      }\n\n      if (parsed.valid.length > 0) {\n        // We add the new tags in one atomic operation\n        // to trigger reactivity once (instead of once per tag)\n        // We do this after we update the new tag input value\n        // `concat()` can be faster than array spread, when both args are arrays\n        this.tags = concat(this.tags, parsed.valid);\n      }\n\n      this.tagsState = parsed; // Attempt to re-focus the input (specifically for when using the Add\n      // button, as the button disappears after successfully adding a tag\n\n      this.focus();\n    },\n    removeTag: function removeTag(tag) {\n      /* istanbul ignore next */\n      if (this.disabled) {\n        return;\n      } // TODO:\n      //   Add `onRemoveTag(tag)` user method, which if returns `false`\n      //   will prevent the tag from being removed (i.e. confirmation)\n      //   Or emit cancelable `BvEvent`\n\n\n      this.tags = this.tags.filter(function (t) {\n        return t !== tag;\n      });\n    },\n    reset: function reset() {\n      var _this2 = this;\n\n      this.newTag = '';\n      this.tags = [];\n      this.$nextTick(function () {\n        _this2.removedTags = [];\n        _this2.tagsState = cleanTagsState();\n      });\n    },\n    // --- Input element event handlers ---\n    onInputInput: function onInputInput(event) {\n      /* istanbul ignore next: hard to test composition events */\n      if (this.disabled || isEvent(event) && event.target.composing) {\n        // `event.target.composing` is set by Vue (`v-model` directive)\n        // https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/directives/model.js\n        return;\n      }\n\n      var newTag = processEventValue(event);\n      var separatorRe = this.computedSeparatorRegExp;\n\n      if (this.newTag !== newTag) {\n        this.newTag = newTag;\n      } // We ignore leading whitespace for the following\n\n\n      newTag = trimLeft(newTag);\n\n      if (separatorRe && separatorRe.test(newTag.slice(-1))) {\n        // A trailing separator character was entered, so add the tag(s)\n        // Note: More than one tag on input event is possible via copy/paste\n        this.addTag();\n      } else {\n        // Validate (parse tags) on input event\n        this.tagsState = newTag === '' ? cleanTagsState() : this.parseTags(newTag);\n      }\n    },\n    onInputChange: function onInputChange(event) {\n      // Change is triggered on `<input>` blur, or `<select>` selected\n      // This event is opt-in\n      if (!this.disabled && this.addOnChange) {\n        var newTag = processEventValue(event);\n        /* istanbul ignore next */\n\n        if (this.newTag !== newTag) {\n          this.newTag = newTag;\n        }\n\n        this.addTag();\n      }\n    },\n    onInputKeydown: function onInputKeydown(event) {\n      // Early exit\n\n      /* istanbul ignore next */\n      if (this.disabled || !isEvent(event)) {\n        return;\n      }\n\n      var keyCode = event.keyCode;\n      var value = event.target.value || '';\n      /* istanbul ignore else: testing to be added later */\n\n      if (!this.noAddOnEnter && keyCode === CODE_ENTER) {\n        // Attempt to add the tag when user presses enter\n        stopEvent(event, {\n          propagation: false\n        });\n        this.addTag();\n      } else if (this.removeOnDelete && (keyCode === CODE_BACKSPACE || keyCode === CODE_DELETE) && value === '') {\n        // Remove the last tag if the user pressed backspace/delete and the input is empty\n        stopEvent(event, {\n          propagation: false\n        });\n        this.tags = this.tags.slice(0, -1);\n      }\n    },\n    // --- Wrapper event handlers ---\n    onClick: function onClick(event) {\n      var _this3 = this;\n\n      var ignoreFocusSelector = this.computeIgnoreInputFocusSelector;\n\n      if (!ignoreFocusSelector || !closest(ignoreFocusSelector, event.target, true)) {\n        this.$nextTick(function () {\n          _this3.focus();\n        });\n      }\n    },\n    onInputFocus: function onInputFocus(event) {\n      var _this4 = this;\n\n      if (this.focusState !== 'out') {\n        this.focusState = 'in';\n        this.$nextTick(function () {\n          requestAF(function () {\n            if (_this4.hasFocus) {\n              _this4.$emit(EVENT_NAME_FOCUS, event);\n\n              _this4.focusState = null;\n            }\n          });\n        });\n      }\n    },\n    onInputBlur: function onInputBlur(event) {\n      var _this5 = this;\n\n      if (this.focusState !== 'in') {\n        this.focusState = 'out';\n        this.$nextTick(function () {\n          requestAF(function () {\n            if (!_this5.hasFocus) {\n              _this5.$emit(EVENT_NAME_BLUR, event);\n\n              _this5.focusState = null;\n            }\n          });\n        });\n      }\n    },\n    onFocusin: function onFocusin(event) {\n      this.hasFocus = true;\n      this.$emit(EVENT_NAME_FOCUSIN, event);\n    },\n    onFocusout: function onFocusout(event) {\n      this.hasFocus = false;\n      this.$emit(EVENT_NAME_FOCUSOUT, event);\n    },\n    handleAutofocus: function handleAutofocus() {\n      var _this6 = this;\n\n      this.$nextTick(function () {\n        requestAF(function () {\n          if (_this6.autofocus) {\n            _this6.focus();\n          }\n        });\n      });\n    },\n    // --- Public methods ---\n    focus: function focus() {\n      if (!this.disabled) {\n        attemptFocus(this.getInput());\n      }\n    },\n    blur: function blur() {\n      if (!this.disabled) {\n        attemptBlur(this.getInput());\n      }\n    },\n    // --- Private methods ---\n    splitTags: function splitTags(newTag) {\n      // Split the input into an array of raw tags\n      newTag = toString(newTag);\n      var separatorRe = this.computedSeparatorRegExp; // Split the tag(s) via the optional separator\n      // Normally only a single tag is provided, but copy/paste\n      // can enter multiple tags in a single operation\n\n      return (separatorRe ? newTag.split(separatorRe) : [newTag]).map(trim).filter(identity);\n    },\n    parseTags: function parseTags(newTag) {\n      var _this7 = this; // Takes `newTag` value and parses it into `validTags`,\n      // `invalidTags`, and duplicate tags as an object\n      // Split the input into raw tags\n\n\n      var tags = this.splitTags(newTag); // Base results\n\n      var parsed = {\n        all: tags,\n        valid: [],\n        invalid: [],\n        duplicate: []\n      }; // Parse the unique tags\n\n      tags.forEach(function (tag) {\n        if (arrayIncludes(_this7.tags, tag) || arrayIncludes(parsed.valid, tag)) {\n          // Unique duplicate tags\n          if (!arrayIncludes(parsed.duplicate, tag)) {\n            parsed.duplicate.push(tag);\n          }\n        } else if (_this7.validateTag(tag)) {\n          // We only add unique/valid tags\n          parsed.valid.push(tag);\n        } else {\n          // Unique invalid tags\n          if (!arrayIncludes(parsed.invalid, tag)) {\n            parsed.invalid.push(tag);\n          }\n        }\n      });\n      return parsed;\n    },\n    validateTag: function validateTag(tag) {\n      var tagValidator = this.tagValidator;\n      return hasPropFunction(tagValidator) ? tagValidator(tag) : true;\n    },\n    getInput: function getInput() {\n      // Returns the input element reference (or null if not found)\n      // We need to escape `computedInputId` since it can be user-provided\n      return select(\"#\".concat(cssEscape(this.computedInputId)), this.$el);\n    },\n    // Default User Interface render\n    defaultRender: function defaultRender(_ref) {\n      var addButtonText = _ref.addButtonText,\n          addButtonVariant = _ref.addButtonVariant,\n          addTag = _ref.addTag,\n          disableAddButton = _ref.disableAddButton,\n          disabled = _ref.disabled,\n          duplicateTagText = _ref.duplicateTagText,\n          inputAttrs = _ref.inputAttrs,\n          inputClass = _ref.inputClass,\n          inputHandlers = _ref.inputHandlers,\n          inputType = _ref.inputType,\n          invalidTagText = _ref.invalidTagText,\n          isDuplicate = _ref.isDuplicate,\n          isInvalid = _ref.isInvalid,\n          isLimitReached = _ref.isLimitReached,\n          limitTagsText = _ref.limitTagsText,\n          noTagRemove = _ref.noTagRemove,\n          placeholder = _ref.placeholder,\n          removeTag = _ref.removeTag,\n          tagClass = _ref.tagClass,\n          tagPills = _ref.tagPills,\n          tagRemoveLabel = _ref.tagRemoveLabel,\n          tagVariant = _ref.tagVariant,\n          tags = _ref.tags;\n      var h = this.$createElement; // Make the list of tags\n\n      var $tags = tags.map(function (tag) {\n        tag = toString(tag);\n        return h(BFormTag, {\n          class: tagClass,\n          // `BFormTag` will auto generate an ID\n          // so we do not need to set the ID prop\n          props: {\n            disabled: disabled,\n            noRemove: noTagRemove,\n            pill: tagPills,\n            removeLabel: tagRemoveLabel,\n            tag: 'li',\n            title: tag,\n            variant: tagVariant\n          },\n          on: {\n            remove: function remove() {\n              return removeTag(tag);\n            }\n          },\n          key: \"tags_\".concat(tag)\n        }, tag);\n      }); // Feedback IDs if needed\n\n      var invalidFeedbackId = invalidTagText && isInvalid ? this.safeId('__invalid_feedback__') : null;\n      var duplicateFeedbackId = duplicateTagText && isDuplicate ? this.safeId('__duplicate_feedback__') : null;\n      var limitFeedbackId = limitTagsText && isLimitReached ? this.safeId('__limit_feedback__') : null; // Compute the `aria-describedby` attribute value\n\n      var ariaDescribedby = [inputAttrs['aria-describedby'], invalidFeedbackId, duplicateFeedbackId, limitFeedbackId].filter(identity).join(' '); // Input\n\n      var $input = h('input', {\n        staticClass: 'b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0',\n        class: inputClass,\n        style: {\n          outline: 0,\n          minWidth: '5rem'\n        },\n        attrs: _objectSpread(_objectSpread({}, inputAttrs), {}, {\n          'aria-describedby': ariaDescribedby || null,\n          type: inputType,\n          placeholder: placeholder || null\n        }),\n        domProps: {\n          value: inputAttrs.value\n        },\n        on: inputHandlers,\n        // Directive needed to get `event.target.composing` set (if needed)\n        directives: [{\n          name: 'model',\n          value: inputAttrs.value\n        }],\n        ref: 'input'\n      }); // Add button\n\n      var $button = h(BButton, {\n        staticClass: 'b-form-tags-button py-0',\n        class: {\n          // Only show the button if the tag can be added\n          // We use the `invisible` class instead of not rendering\n          // the button, so that we maintain layout to prevent\n          // the user input from jumping around\n          invisible: disableAddButton\n        },\n        style: {\n          fontSize: '90%'\n        },\n        props: {\n          disabled: disableAddButton || isLimitReached,\n          variant: addButtonVariant\n        },\n        on: {\n          click: function click() {\n            return addTag();\n          }\n        },\n        ref: 'button'\n      }, [this.normalizeSlot(SLOT_NAME_ADD_BUTTON_TEXT) || addButtonText]); // ID of the tags + input `<ul>` list\n      // Note we could concatenate `inputAttrs.id` with '__tag_list__'\n      // but `inputId` may be `null` until after mount\n      // `safeId()` returns `null`, if no user provided ID,\n      // until after mount when a unique ID is generated\n\n      var tagListId = this.safeId('__tag_list__');\n      var $field = h('li', {\n        staticClass: 'b-form-tags-field flex-grow-1',\n        attrs: {\n          role: 'none',\n          'aria-live': 'off',\n          'aria-controls': tagListId\n        },\n        key: 'tags_field'\n      }, [h('div', {\n        staticClass: 'd-flex',\n        attrs: {\n          role: 'group'\n        }\n      }, [$input, $button])]); // Wrap in an unordered list element (we use a list for accessibility)\n\n      var $ul = h('ul', {\n        staticClass: 'b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center',\n        attrs: {\n          id: tagListId\n        },\n        key: 'tags_list'\n      }, [$tags, $field]); // Assemble the feedback\n\n      var $feedback = h();\n\n      if (invalidTagText || duplicateTagText || limitTagsText) {\n        // Add an aria live region for the invalid/duplicate tag\n        // messages if the user has not disabled the messages\n        var ariaLive = this.feedbackAriaLive,\n            joiner = this.computedJoiner; // Invalid tag feedback if needed (error)\n\n        var $invalid = h();\n\n        if (invalidFeedbackId) {\n          $invalid = h(BFormInvalidFeedback, {\n            props: {\n              id: invalidFeedbackId,\n              ariaLive: ariaLive,\n              forceShow: true\n            },\n            key: 'tags_invalid_feedback'\n          }, [this.invalidTagText, ': ', this.invalidTags.join(joiner)]);\n        } // Duplicate tag feedback if needed (warning, not error)\n\n\n        var $duplicate = h();\n\n        if (duplicateFeedbackId) {\n          $duplicate = h(BFormText, {\n            props: {\n              id: duplicateFeedbackId,\n              ariaLive: ariaLive\n            },\n            key: 'tags_duplicate_feedback'\n          }, [this.duplicateTagText, ': ', this.duplicateTags.join(joiner)]);\n        } // Limit tags feedback if needed (warning, not error)\n\n\n        var $limit = h();\n\n        if (limitFeedbackId) {\n          $limit = h(BFormText, {\n            props: {\n              id: limitFeedbackId,\n              ariaLive: ariaLive\n            },\n            key: 'tags_limit_feedback'\n          }, [limitTagsText]);\n        }\n\n        $feedback = h('div', {\n          attrs: {\n            'aria-live': 'polite',\n            'aria-atomic': 'true'\n          },\n          key: 'tags_feedback'\n        }, [$invalid, $duplicate, $limit]);\n      } // Return the content\n\n\n      return [$ul, $feedback];\n    }\n  },\n  render: function render(h) {\n    var name = this.name,\n        disabled = this.disabled,\n        required = this.required,\n        form = this.form,\n        tags = this.tags,\n        computedInputId = this.computedInputId,\n        hasFocus = this.hasFocus,\n        noOuterFocus = this.noOuterFocus; // Scoped slot properties\n\n    var scope = _objectSpread({\n      // Array of tags (shallow copy to prevent mutations)\n      tags: tags.slice(),\n      // <input> v-bind:inputAttrs\n      inputAttrs: this.computedInputAttrs,\n      // We don't include this in the attrs, as users may want to override this\n      inputType: this.computedInputType,\n      // <input> v-on:inputHandlers\n      inputHandlers: this.computedInputHandlers,\n      // Methods\n      removeTag: this.removeTag,\n      addTag: this.addTag,\n      reset: this.reset,\n      // <input> :id=\"inputId\"\n      inputId: computedInputId,\n      // Invalid/Duplicate state information\n      isInvalid: this.hasInvalidTags,\n      invalidTags: this.invalidTags.slice(),\n      isDuplicate: this.hasDuplicateTags,\n      duplicateTags: this.duplicateTags.slice(),\n      isLimitReached: this.isLimitReached,\n      // If the 'Add' button should be disabled\n      disableAddButton: this.disableAddButton\n    }, pick(this.$props, ['addButtonText', 'addButtonVariant', 'disabled', 'duplicateTagText', 'form', 'inputClass', 'invalidTagText', 'limit', 'limitTagsText', 'noTagRemove', 'placeholder', 'required', 'separator', 'size', 'state', 'tagClass', 'tagPills', 'tagRemoveLabel', 'tagVariant'])); // Generate the user interface\n\n\n    var $content = this.normalizeSlot(SLOT_NAME_DEFAULT, scope) || this.defaultRender(scope); // Generate the `aria-live` region for the current value(s)\n\n    var $output = h('output', {\n      staticClass: 'sr-only',\n      attrs: {\n        id: this.safeId('__selected_tags__'),\n        role: 'status',\n        for: computedInputId,\n        'aria-live': hasFocus ? 'polite' : 'off',\n        'aria-atomic': 'true',\n        'aria-relevant': 'additions text'\n      }\n    }, this.tags.join(', ')); // Removed tag live region\n\n    var $removed = h('div', {\n      staticClass: 'sr-only',\n      attrs: {\n        id: this.safeId('__removed_tags__'),\n        role: 'status',\n        'aria-live': hasFocus ? 'assertive' : 'off',\n        'aria-atomic': 'true'\n      }\n    }, this.removedTags.length > 0 ? \"(\".concat(this.tagRemovedLabel, \") \").concat(this.removedTags.join(', ')) : ''); // Add hidden inputs for form submission\n\n    var $hidden = h();\n\n    if (name && !disabled) {\n      // We add hidden inputs for each tag if a name is provided\n      // When there are currently no tags, a visually hidden input\n      // with empty value is rendered for proper required handling\n      var hasTags = tags.length > 0;\n      $hidden = (hasTags ? tags : ['']).map(function (tag) {\n        return h('input', {\n          class: {\n            'sr-only': !hasTags\n          },\n          attrs: {\n            type: hasTags ? 'hidden' : 'text',\n            value: tag,\n            required: required,\n            name: name,\n            form: form\n          },\n          key: \"tag_input_\".concat(tag)\n        });\n      });\n    } // Return the rendered output\n\n\n    return h('div', {\n      staticClass: 'b-form-tags form-control h-auto',\n      class: [{\n        focus: hasFocus && !noOuterFocus && !disabled,\n        disabled: disabled\n      }, this.sizeFormClass, this.stateClass],\n      attrs: {\n        id: this.safeId(),\n        role: 'group',\n        tabindex: disabled || noOuterFocus ? null : '-1',\n        'aria-describedby': this.safeId('__selected_tags__')\n      },\n      on: {\n        click: this.onClick,\n        focusin: this.onFocusin,\n        focusout: this.onFocusout\n      }\n    }, [$output, $removed, $content, $hidden]);\n  }\n});","map":{"version":3,"names":["_watch","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","NAME_FORM_TAGS","EVENT_NAME_BLUR","EVENT_NAME_FOCUS","EVENT_NAME_FOCUSIN","EVENT_NAME_FOCUSOUT","EVENT_NAME_TAG_STATE","EVENT_OPTIONS_PASSIVE","CODE_BACKSPACE","CODE_DELETE","CODE_ENTER","PROP_TYPE_ARRAY","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_ARRAY_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_FUNCTION","PROP_TYPE_NUMBER","PROP_TYPE_OBJECT","PROP_TYPE_STRING","RX_SPACES","SLOT_NAME_DEFAULT","SLOT_NAME_ADD_BUTTON_TEXT","arrayIncludes","concat","cssEscape","attemptBlur","attemptFocus","closest","matches","requestAF","select","eventOn","eventOff","stopEvent","identity","isEvent","isNumber","isString","looseEqual","makeModelMixin","omit","pick","sortKeys","hasPropFunction","makeProp","makePropsConfigurable","escapeRegExp","trim","trimLeft","formControlMixin","props","formControlProps","formSizeMixin","formSizeProps","formStateMixin","formStateProps","idMixin","idProps","listenersMixin","normalizeSlotMixin","BButton","BFormInvalidFeedback","BFormText","BFormTag","_makeModelMixin","type","defaultValue","modelMixin","mixin","modelProps","MODEL_PROP_NAME","prop","MODEL_EVENT_NAME","event","TYPES","DEFAULT_INPUT_FOCUS_SELECTOR","join","escapeRegExpChars","str","replace","cleanTags","tags","map","tag","index","indexOf","processEventValue","cleanTagsState","all","valid","invalid","duplicate","addButtonText","addButtonVariant","addOnChange","duplicateTagText","feedbackAriaLive","ignoreInputFocusSelector","inputAttrs","inputClass","inputId","inputType","invalidTagText","limit","limitTagsText","noAddOnEnter","noOuterFocus","noTagRemove","placeholder","removeOnDelete","separator","tagClass","tagPills","tagRemoveLabel","tagRemovedLabel","tagValidator","tagVariant","BFormTags","extend","mixins","data","hasFocus","newTag","removedTags","tagsState","focusState","computed","computedInputId","safeId","computedInputType","computedInputAttrs","disabled","form","id","computedInputHandlers","bvListeners","blur","onInputBlur","change","onInputChange","focus","onInputFocus","input","onInputInput","keydown","onInputKeydown","reset","computedSeparator","computedSeparatorRegExp","RegExp","computedJoiner","joiner","charAt","computeIgnoreInputFocusSelector","disableAddButton","_this","splitTags","some","t","validateTag","duplicateTags","hasDuplicateTags","invalidTags","hasInvalidTags","isLimitReached","watch","newValue","oldValue","$emit","old","created","mounted","$form","$el","beforeDestroy","methods","addTag","parsed","parseTags","getInput","invalidAndDuplicates","removeTag","_this2","$nextTick","composing","separatorRe","keyCode","propagation","onClick","_this3","ignoreFocusSelector","_this4","_this5","onFocusin","onFocusout","handleAutofocus","_this6","autofocus","split","_this7","defaultRender","_ref","inputHandlers","isDuplicate","isInvalid","h","$createElement","$tags","class","noRemove","pill","removeLabel","title","variant","on","remove","invalidFeedbackId","duplicateFeedbackId","limitFeedbackId","ariaDescribedby","$input","staticClass","style","outline","minWidth","attrs","domProps","directives","ref","$button","invisible","fontSize","click","normalizeSlot","tagListId","$field","role","$ul","$feedback","ariaLive","$invalid","forceShow","$duplicate","$limit","render","required","scope","$props","$content","$output","for","$removed","$hidden","hasTags","sizeFormClass","stateClass","tabindex","focusin","focusout"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/components/form-tags/form-tags.js"],"sourcesContent":["var _watch;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Tagged input form control\n// Based loosely on https://adamwathan.me/renderless-components-in-vuejs/\nimport { Vue } from '../../vue';\nimport { NAME_FORM_TAGS } from '../../constants/components';\nimport { EVENT_NAME_BLUR, EVENT_NAME_FOCUS, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_TAG_STATE, EVENT_OPTIONS_PASSIVE } from '../../constants/events';\nimport { CODE_BACKSPACE, CODE_DELETE, CODE_ENTER } from '../../constants/key-codes';\nimport { PROP_TYPE_ARRAY, PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_FUNCTION, PROP_TYPE_NUMBER, PROP_TYPE_OBJECT, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACES } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_ADD_BUTTON_TEXT } from '../../constants/slots';\nimport { arrayIncludes, concat } from '../../utils/array';\nimport { cssEscape } from '../../utils/css-escape';\nimport { attemptBlur, attemptFocus, closest, matches, requestAF, select } from '../../utils/dom';\nimport { eventOn, eventOff, stopEvent } from '../../utils/events';\nimport { identity } from '../../utils/identity';\nimport { isEvent, isNumber, isString } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { makeModelMixin } from '../../utils/model';\nimport { omit, pick, sortKeys } from '../../utils/object';\nimport { hasPropFunction, makeProp, makePropsConfigurable } from '../../utils/props';\nimport { escapeRegExp, toString, trim, trimLeft } from '../../utils/string';\nimport { formControlMixin, props as formControlProps } from '../../mixins/form-control';\nimport { formSizeMixin, props as formSizeProps } from '../../mixins/form-size';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { listenersMixin } from '../../mixins/listeners';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BButton } from '../button/button';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormText } from '../form/form-text';\nimport { BFormTag } from './form-tag'; // --- Constants ---\n\nvar _makeModelMixin = makeModelMixin('value', {\n  type: PROP_TYPE_ARRAY,\n  defaultValue: []\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event; // Supported input types (for built in input)\n\n\nvar TYPES = ['text', 'email', 'tel', 'url', 'number']; // Default ignore input focus selector\n\nvar DEFAULT_INPUT_FOCUS_SELECTOR = ['.b-form-tag', 'button', 'input', 'select'].join(' '); // --- Helper methods ---\n// Escape special chars in string and replace\n// contiguous spaces with a whitespace match\n\nvar escapeRegExpChars = function escapeRegExpChars(str) {\n  return escapeRegExp(str).replace(RX_SPACES, '\\\\s');\n}; // Remove leading/trailing spaces from array of tags and remove duplicates\n\n\nvar cleanTags = function cleanTags(tags) {\n  return concat(tags).map(function (tag) {\n    return trim(toString(tag));\n  }).filter(function (tag, index, arr) {\n    return tag.length > 0 && arr.indexOf(tag) === index;\n  });\n}; // Processes an input/change event, normalizing string or event argument\n\n\nvar processEventValue = function processEventValue(event) {\n  return isString(event) ? event : isEvent(event) ? event.target.value || '' : '';\n}; // Returns a fresh empty `tagsState` object\n\n\nvar cleanTagsState = function cleanTagsState() {\n  return {\n    all: [],\n    valid: [],\n    invalid: [],\n    duplicate: []\n  };\n}; // --- Props ---\n\n\nvar props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), formControlProps), formSizeProps), formStateProps), {}, {\n  addButtonText: makeProp(PROP_TYPE_STRING, 'Add'),\n  addButtonVariant: makeProp(PROP_TYPE_STRING, 'outline-secondary'),\n  // Enable change event triggering tag addition\n  // Handy if using <select> as the input\n  addOnChange: makeProp(PROP_TYPE_BOOLEAN, false),\n  duplicateTagText: makeProp(PROP_TYPE_STRING, 'Duplicate tag(s)'),\n  feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n  // Disable the input focus behavior when clicking\n  // on element matching the selector (or selectors)\n  ignoreInputFocusSelector: makeProp(PROP_TYPE_ARRAY_STRING, DEFAULT_INPUT_FOCUS_SELECTOR),\n  // Additional attributes to add to the input element\n  inputAttrs: makeProp(PROP_TYPE_OBJECT, {}),\n  inputClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  inputId: makeProp(PROP_TYPE_STRING),\n  inputType: makeProp(PROP_TYPE_STRING, 'text', function (value) {\n    return arrayIncludes(TYPES, value);\n  }),\n  invalidTagText: makeProp(PROP_TYPE_STRING, 'Invalid tag(s)'),\n  limit: makeProp(PROP_TYPE_NUMBER),\n  limitTagsText: makeProp(PROP_TYPE_STRING, 'Tag limit reached'),\n  // Disable ENTER key from triggering tag addition\n  noAddOnEnter: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Disable the focus ring on the root element\n  noOuterFocus: makeProp(PROP_TYPE_BOOLEAN, false),\n  noTagRemove: makeProp(PROP_TYPE_BOOLEAN, false),\n  placeholder: makeProp(PROP_TYPE_STRING, 'Add tag...'),\n  // Enable deleting last tag in list when CODE_BACKSPACE is\n  // pressed and input is empty\n  removeOnDelete: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Character (or characters) that trigger adding tags\n  separator: makeProp(PROP_TYPE_ARRAY_STRING),\n  tagClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tagPills: makeProp(PROP_TYPE_BOOLEAN, false),\n  tagRemoveLabel: makeProp(PROP_TYPE_STRING, 'Remove tag'),\n  tagRemovedLabel: makeProp(PROP_TYPE_STRING, 'Tag removed'),\n  tagValidator: makeProp(PROP_TYPE_FUNCTION),\n  tagVariant: makeProp(PROP_TYPE_STRING, 'secondary')\n})), NAME_FORM_TAGS); // --- Main component ---\n// @vue/component\n\nexport var BFormTags = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_TAGS,\n  mixins: [listenersMixin, idMixin, modelMixin, formControlMixin, formSizeMixin, formStateMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      hasFocus: false,\n      newTag: '',\n      tags: [],\n      // Tags that were removed\n      removedTags: [],\n      // Populated when tags are parsed\n      tagsState: cleanTagsState(),\n      focusState: null\n    };\n  },\n  computed: {\n    computedInputId: function computedInputId() {\n      return this.inputId || this.safeId('__input__');\n    },\n    computedInputType: function computedInputType() {\n      // We only allow certain types\n      return arrayIncludes(TYPES, this.inputType) ? this.inputType : 'text';\n    },\n    computedInputAttrs: function computedInputAttrs() {\n      var disabled = this.disabled,\n          form = this.form;\n      return _objectSpread(_objectSpread({}, this.inputAttrs), {}, {\n        // Must have attributes\n        id: this.computedInputId,\n        value: this.newTag,\n        disabled: disabled,\n        form: form\n      });\n    },\n    computedInputHandlers: function computedInputHandlers() {\n      return _objectSpread(_objectSpread({}, omit(this.bvListeners, [EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT])), {}, {\n        blur: this.onInputBlur,\n        change: this.onInputChange,\n        focus: this.onInputFocus,\n        input: this.onInputInput,\n        keydown: this.onInputKeydown,\n        reset: this.reset\n      });\n    },\n    computedSeparator: function computedSeparator() {\n      // Merge the array into a string\n      return concat(this.separator).filter(isString).filter(identity).join('');\n    },\n    computedSeparatorRegExp: function computedSeparatorRegExp() {\n      // We use a computed prop here to precompile the RegExp\n      // The RegExp is a character class RE in the form of `/[abc]+/`\n      // where a, b, and c are the valid separator characters\n      // -> `tags = str.split(/[abc]+/).filter(t => t)`\n      var separator = this.computedSeparator;\n      return separator ? new RegExp(\"[\".concat(escapeRegExpChars(separator), \"]+\")) : null;\n    },\n    computedJoiner: function computedJoiner() {\n      // When tag(s) are invalid or duplicate, we leave them\n      // in the input so that the user can see them\n      // If there are more than one tag in the input, we use the\n      // first separator character as the separator in the input\n      // We append a space if the first separator is not a space\n      var joiner = this.computedSeparator.charAt(0);\n      return joiner !== ' ' ? \"\".concat(joiner, \" \") : joiner;\n    },\n    computeIgnoreInputFocusSelector: function computeIgnoreInputFocusSelector() {\n      // Normalize to an single selector with selectors separated by `,`\n      return concat(this.ignoreInputFocusSelector).filter(identity).join(',').trim();\n    },\n    disableAddButton: function disableAddButton() {\n      var _this = this;\n\n      // If 'Add' button should be disabled\n      // If the input contains at least one tag that can\n      // be added, then the 'Add' button should be enabled\n      var newTag = trim(this.newTag);\n      return newTag === '' || !this.splitTags(newTag).some(function (t) {\n        return !arrayIncludes(_this.tags, t) && _this.validateTag(t);\n      });\n    },\n    duplicateTags: function duplicateTags() {\n      return this.tagsState.duplicate;\n    },\n    hasDuplicateTags: function hasDuplicateTags() {\n      return this.duplicateTags.length > 0;\n    },\n    invalidTags: function invalidTags() {\n      return this.tagsState.invalid;\n    },\n    hasInvalidTags: function hasInvalidTags() {\n      return this.invalidTags.length > 0;\n    },\n    isLimitReached: function isLimitReached() {\n      var limit = this.limit;\n      return isNumber(limit) && limit >= 0 && this.tags.length >= limit;\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    this.tags = cleanTags(newValue);\n  }), _defineProperty(_watch, \"tags\", function tags(newValue, oldValue) {\n    // Update the `v-model` (if it differs from the value prop)\n    if (!looseEqual(newValue, this[MODEL_PROP_NAME])) {\n      this.$emit(MODEL_EVENT_NAME, newValue);\n    }\n\n    if (!looseEqual(newValue, oldValue)) {\n      newValue = concat(newValue).filter(identity);\n      oldValue = concat(oldValue).filter(identity);\n      this.removedTags = oldValue.filter(function (old) {\n        return !arrayIncludes(newValue, old);\n      });\n    }\n  }), _defineProperty(_watch, \"tagsState\", function tagsState(newValue, oldValue) {\n    // Emit a tag-state event when the `tagsState` object changes\n    if (!looseEqual(newValue, oldValue)) {\n      this.$emit(EVENT_NAME_TAG_STATE, newValue.valid, newValue.invalid, newValue.duplicate);\n    }\n  }), _watch),\n  created: function created() {\n    // We do this in created to make sure an input event emits\n    // if the cleaned tags are not equal to the value prop\n    this.tags = cleanTags(this[MODEL_PROP_NAME]);\n  },\n  mounted: function mounted() {\n    // Listen for form reset events, to reset the tags input\n    var $form = closest('form', this.$el);\n\n    if ($form) {\n      eventOn($form, 'reset', this.reset, EVENT_OPTIONS_PASSIVE);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    var $form = closest('form', this.$el);\n\n    if ($form) {\n      eventOff($form, 'reset', this.reset, EVENT_OPTIONS_PASSIVE);\n    }\n  },\n  methods: {\n    addTag: function addTag(newTag) {\n      newTag = isString(newTag) ? newTag : this.newTag;\n      /* istanbul ignore next */\n\n      if (this.disabled || trim(newTag) === '' || this.isLimitReached) {\n        // Early exit\n        return;\n      }\n\n      var parsed = this.parseTags(newTag); // Add any new tags to the `tags` array, or if the\n      // array of `allTags` is empty, we clear the input\n\n      if (parsed.valid.length > 0 || parsed.all.length === 0) {\n        // Clear the user input element (and leave in any invalid/duplicate tag(s)\n\n        /* istanbul ignore if: full testing to be added later */\n        if (matches(this.getInput(), 'select')) {\n          // The following is needed to properly\n          // work with `<select>` elements\n          this.newTag = '';\n        } else {\n          var invalidAndDuplicates = [].concat(_toConsumableArray(parsed.invalid), _toConsumableArray(parsed.duplicate));\n          this.newTag = parsed.all.filter(function (tag) {\n            return arrayIncludes(invalidAndDuplicates, tag);\n          }).join(this.computedJoiner).concat(invalidAndDuplicates.length > 0 ? this.computedJoiner.charAt(0) : '');\n        }\n      }\n\n      if (parsed.valid.length > 0) {\n        // We add the new tags in one atomic operation\n        // to trigger reactivity once (instead of once per tag)\n        // We do this after we update the new tag input value\n        // `concat()` can be faster than array spread, when both args are arrays\n        this.tags = concat(this.tags, parsed.valid);\n      }\n\n      this.tagsState = parsed; // Attempt to re-focus the input (specifically for when using the Add\n      // button, as the button disappears after successfully adding a tag\n\n      this.focus();\n    },\n    removeTag: function removeTag(tag) {\n      /* istanbul ignore next */\n      if (this.disabled) {\n        return;\n      } // TODO:\n      //   Add `onRemoveTag(tag)` user method, which if returns `false`\n      //   will prevent the tag from being removed (i.e. confirmation)\n      //   Or emit cancelable `BvEvent`\n\n\n      this.tags = this.tags.filter(function (t) {\n        return t !== tag;\n      });\n    },\n    reset: function reset() {\n      var _this2 = this;\n\n      this.newTag = '';\n      this.tags = [];\n      this.$nextTick(function () {\n        _this2.removedTags = [];\n        _this2.tagsState = cleanTagsState();\n      });\n    },\n    // --- Input element event handlers ---\n    onInputInput: function onInputInput(event) {\n      /* istanbul ignore next: hard to test composition events */\n      if (this.disabled || isEvent(event) && event.target.composing) {\n        // `event.target.composing` is set by Vue (`v-model` directive)\n        // https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/directives/model.js\n        return;\n      }\n\n      var newTag = processEventValue(event);\n      var separatorRe = this.computedSeparatorRegExp;\n\n      if (this.newTag !== newTag) {\n        this.newTag = newTag;\n      } // We ignore leading whitespace for the following\n\n\n      newTag = trimLeft(newTag);\n\n      if (separatorRe && separatorRe.test(newTag.slice(-1))) {\n        // A trailing separator character was entered, so add the tag(s)\n        // Note: More than one tag on input event is possible via copy/paste\n        this.addTag();\n      } else {\n        // Validate (parse tags) on input event\n        this.tagsState = newTag === '' ? cleanTagsState() : this.parseTags(newTag);\n      }\n    },\n    onInputChange: function onInputChange(event) {\n      // Change is triggered on `<input>` blur, or `<select>` selected\n      // This event is opt-in\n      if (!this.disabled && this.addOnChange) {\n        var newTag = processEventValue(event);\n        /* istanbul ignore next */\n\n        if (this.newTag !== newTag) {\n          this.newTag = newTag;\n        }\n\n        this.addTag();\n      }\n    },\n    onInputKeydown: function onInputKeydown(event) {\n      // Early exit\n\n      /* istanbul ignore next */\n      if (this.disabled || !isEvent(event)) {\n        return;\n      }\n\n      var keyCode = event.keyCode;\n      var value = event.target.value || '';\n      /* istanbul ignore else: testing to be added later */\n\n      if (!this.noAddOnEnter && keyCode === CODE_ENTER) {\n        // Attempt to add the tag when user presses enter\n        stopEvent(event, {\n          propagation: false\n        });\n        this.addTag();\n      } else if (this.removeOnDelete && (keyCode === CODE_BACKSPACE || keyCode === CODE_DELETE) && value === '') {\n        // Remove the last tag if the user pressed backspace/delete and the input is empty\n        stopEvent(event, {\n          propagation: false\n        });\n        this.tags = this.tags.slice(0, -1);\n      }\n    },\n    // --- Wrapper event handlers ---\n    onClick: function onClick(event) {\n      var _this3 = this;\n\n      var ignoreFocusSelector = this.computeIgnoreInputFocusSelector;\n\n      if (!ignoreFocusSelector || !closest(ignoreFocusSelector, event.target, true)) {\n        this.$nextTick(function () {\n          _this3.focus();\n        });\n      }\n    },\n    onInputFocus: function onInputFocus(event) {\n      var _this4 = this;\n\n      if (this.focusState !== 'out') {\n        this.focusState = 'in';\n        this.$nextTick(function () {\n          requestAF(function () {\n            if (_this4.hasFocus) {\n              _this4.$emit(EVENT_NAME_FOCUS, event);\n\n              _this4.focusState = null;\n            }\n          });\n        });\n      }\n    },\n    onInputBlur: function onInputBlur(event) {\n      var _this5 = this;\n\n      if (this.focusState !== 'in') {\n        this.focusState = 'out';\n        this.$nextTick(function () {\n          requestAF(function () {\n            if (!_this5.hasFocus) {\n              _this5.$emit(EVENT_NAME_BLUR, event);\n\n              _this5.focusState = null;\n            }\n          });\n        });\n      }\n    },\n    onFocusin: function onFocusin(event) {\n      this.hasFocus = true;\n      this.$emit(EVENT_NAME_FOCUSIN, event);\n    },\n    onFocusout: function onFocusout(event) {\n      this.hasFocus = false;\n      this.$emit(EVENT_NAME_FOCUSOUT, event);\n    },\n    handleAutofocus: function handleAutofocus() {\n      var _this6 = this;\n\n      this.$nextTick(function () {\n        requestAF(function () {\n          if (_this6.autofocus) {\n            _this6.focus();\n          }\n        });\n      });\n    },\n    // --- Public methods ---\n    focus: function focus() {\n      if (!this.disabled) {\n        attemptFocus(this.getInput());\n      }\n    },\n    blur: function blur() {\n      if (!this.disabled) {\n        attemptBlur(this.getInput());\n      }\n    },\n    // --- Private methods ---\n    splitTags: function splitTags(newTag) {\n      // Split the input into an array of raw tags\n      newTag = toString(newTag);\n      var separatorRe = this.computedSeparatorRegExp; // Split the tag(s) via the optional separator\n      // Normally only a single tag is provided, but copy/paste\n      // can enter multiple tags in a single operation\n\n      return (separatorRe ? newTag.split(separatorRe) : [newTag]).map(trim).filter(identity);\n    },\n    parseTags: function parseTags(newTag) {\n      var _this7 = this;\n\n      // Takes `newTag` value and parses it into `validTags`,\n      // `invalidTags`, and duplicate tags as an object\n      // Split the input into raw tags\n      var tags = this.splitTags(newTag); // Base results\n\n      var parsed = {\n        all: tags,\n        valid: [],\n        invalid: [],\n        duplicate: []\n      }; // Parse the unique tags\n\n      tags.forEach(function (tag) {\n        if (arrayIncludes(_this7.tags, tag) || arrayIncludes(parsed.valid, tag)) {\n          // Unique duplicate tags\n          if (!arrayIncludes(parsed.duplicate, tag)) {\n            parsed.duplicate.push(tag);\n          }\n        } else if (_this7.validateTag(tag)) {\n          // We only add unique/valid tags\n          parsed.valid.push(tag);\n        } else {\n          // Unique invalid tags\n          if (!arrayIncludes(parsed.invalid, tag)) {\n            parsed.invalid.push(tag);\n          }\n        }\n      });\n      return parsed;\n    },\n    validateTag: function validateTag(tag) {\n      var tagValidator = this.tagValidator;\n      return hasPropFunction(tagValidator) ? tagValidator(tag) : true;\n    },\n    getInput: function getInput() {\n      // Returns the input element reference (or null if not found)\n      // We need to escape `computedInputId` since it can be user-provided\n      return select(\"#\".concat(cssEscape(this.computedInputId)), this.$el);\n    },\n    // Default User Interface render\n    defaultRender: function defaultRender(_ref) {\n      var addButtonText = _ref.addButtonText,\n          addButtonVariant = _ref.addButtonVariant,\n          addTag = _ref.addTag,\n          disableAddButton = _ref.disableAddButton,\n          disabled = _ref.disabled,\n          duplicateTagText = _ref.duplicateTagText,\n          inputAttrs = _ref.inputAttrs,\n          inputClass = _ref.inputClass,\n          inputHandlers = _ref.inputHandlers,\n          inputType = _ref.inputType,\n          invalidTagText = _ref.invalidTagText,\n          isDuplicate = _ref.isDuplicate,\n          isInvalid = _ref.isInvalid,\n          isLimitReached = _ref.isLimitReached,\n          limitTagsText = _ref.limitTagsText,\n          noTagRemove = _ref.noTagRemove,\n          placeholder = _ref.placeholder,\n          removeTag = _ref.removeTag,\n          tagClass = _ref.tagClass,\n          tagPills = _ref.tagPills,\n          tagRemoveLabel = _ref.tagRemoveLabel,\n          tagVariant = _ref.tagVariant,\n          tags = _ref.tags;\n      var h = this.$createElement; // Make the list of tags\n\n      var $tags = tags.map(function (tag) {\n        tag = toString(tag);\n        return h(BFormTag, {\n          class: tagClass,\n          // `BFormTag` will auto generate an ID\n          // so we do not need to set the ID prop\n          props: {\n            disabled: disabled,\n            noRemove: noTagRemove,\n            pill: tagPills,\n            removeLabel: tagRemoveLabel,\n            tag: 'li',\n            title: tag,\n            variant: tagVariant\n          },\n          on: {\n            remove: function remove() {\n              return removeTag(tag);\n            }\n          },\n          key: \"tags_\".concat(tag)\n        }, tag);\n      }); // Feedback IDs if needed\n\n      var invalidFeedbackId = invalidTagText && isInvalid ? this.safeId('__invalid_feedback__') : null;\n      var duplicateFeedbackId = duplicateTagText && isDuplicate ? this.safeId('__duplicate_feedback__') : null;\n      var limitFeedbackId = limitTagsText && isLimitReached ? this.safeId('__limit_feedback__') : null; // Compute the `aria-describedby` attribute value\n\n      var ariaDescribedby = [inputAttrs['aria-describedby'], invalidFeedbackId, duplicateFeedbackId, limitFeedbackId].filter(identity).join(' '); // Input\n\n      var $input = h('input', {\n        staticClass: 'b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0',\n        class: inputClass,\n        style: {\n          outline: 0,\n          minWidth: '5rem'\n        },\n        attrs: _objectSpread(_objectSpread({}, inputAttrs), {}, {\n          'aria-describedby': ariaDescribedby || null,\n          type: inputType,\n          placeholder: placeholder || null\n        }),\n        domProps: {\n          value: inputAttrs.value\n        },\n        on: inputHandlers,\n        // Directive needed to get `event.target.composing` set (if needed)\n        directives: [{\n          name: 'model',\n          value: inputAttrs.value\n        }],\n        ref: 'input'\n      }); // Add button\n\n      var $button = h(BButton, {\n        staticClass: 'b-form-tags-button py-0',\n        class: {\n          // Only show the button if the tag can be added\n          // We use the `invisible` class instead of not rendering\n          // the button, so that we maintain layout to prevent\n          // the user input from jumping around\n          invisible: disableAddButton\n        },\n        style: {\n          fontSize: '90%'\n        },\n        props: {\n          disabled: disableAddButton || isLimitReached,\n          variant: addButtonVariant\n        },\n        on: {\n          click: function click() {\n            return addTag();\n          }\n        },\n        ref: 'button'\n      }, [this.normalizeSlot(SLOT_NAME_ADD_BUTTON_TEXT) || addButtonText]); // ID of the tags + input `<ul>` list\n      // Note we could concatenate `inputAttrs.id` with '__tag_list__'\n      // but `inputId` may be `null` until after mount\n      // `safeId()` returns `null`, if no user provided ID,\n      // until after mount when a unique ID is generated\n\n      var tagListId = this.safeId('__tag_list__');\n      var $field = h('li', {\n        staticClass: 'b-form-tags-field flex-grow-1',\n        attrs: {\n          role: 'none',\n          'aria-live': 'off',\n          'aria-controls': tagListId\n        },\n        key: 'tags_field'\n      }, [h('div', {\n        staticClass: 'd-flex',\n        attrs: {\n          role: 'group'\n        }\n      }, [$input, $button])]); // Wrap in an unordered list element (we use a list for accessibility)\n\n      var $ul = h('ul', {\n        staticClass: 'b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center',\n        attrs: {\n          id: tagListId\n        },\n        key: 'tags_list'\n      }, [$tags, $field]); // Assemble the feedback\n\n      var $feedback = h();\n\n      if (invalidTagText || duplicateTagText || limitTagsText) {\n        // Add an aria live region for the invalid/duplicate tag\n        // messages if the user has not disabled the messages\n        var ariaLive = this.feedbackAriaLive,\n            joiner = this.computedJoiner; // Invalid tag feedback if needed (error)\n\n        var $invalid = h();\n\n        if (invalidFeedbackId) {\n          $invalid = h(BFormInvalidFeedback, {\n            props: {\n              id: invalidFeedbackId,\n              ariaLive: ariaLive,\n              forceShow: true\n            },\n            key: 'tags_invalid_feedback'\n          }, [this.invalidTagText, ': ', this.invalidTags.join(joiner)]);\n        } // Duplicate tag feedback if needed (warning, not error)\n\n\n        var $duplicate = h();\n\n        if (duplicateFeedbackId) {\n          $duplicate = h(BFormText, {\n            props: {\n              id: duplicateFeedbackId,\n              ariaLive: ariaLive\n            },\n            key: 'tags_duplicate_feedback'\n          }, [this.duplicateTagText, ': ', this.duplicateTags.join(joiner)]);\n        } // Limit tags feedback if needed (warning, not error)\n\n\n        var $limit = h();\n\n        if (limitFeedbackId) {\n          $limit = h(BFormText, {\n            props: {\n              id: limitFeedbackId,\n              ariaLive: ariaLive\n            },\n            key: 'tags_limit_feedback'\n          }, [limitTagsText]);\n        }\n\n        $feedback = h('div', {\n          attrs: {\n            'aria-live': 'polite',\n            'aria-atomic': 'true'\n          },\n          key: 'tags_feedback'\n        }, [$invalid, $duplicate, $limit]);\n      } // Return the content\n\n\n      return [$ul, $feedback];\n    }\n  },\n  render: function render(h) {\n    var name = this.name,\n        disabled = this.disabled,\n        required = this.required,\n        form = this.form,\n        tags = this.tags,\n        computedInputId = this.computedInputId,\n        hasFocus = this.hasFocus,\n        noOuterFocus = this.noOuterFocus; // Scoped slot properties\n\n    var scope = _objectSpread({\n      // Array of tags (shallow copy to prevent mutations)\n      tags: tags.slice(),\n      // <input> v-bind:inputAttrs\n      inputAttrs: this.computedInputAttrs,\n      // We don't include this in the attrs, as users may want to override this\n      inputType: this.computedInputType,\n      // <input> v-on:inputHandlers\n      inputHandlers: this.computedInputHandlers,\n      // Methods\n      removeTag: this.removeTag,\n      addTag: this.addTag,\n      reset: this.reset,\n      // <input> :id=\"inputId\"\n      inputId: computedInputId,\n      // Invalid/Duplicate state information\n      isInvalid: this.hasInvalidTags,\n      invalidTags: this.invalidTags.slice(),\n      isDuplicate: this.hasDuplicateTags,\n      duplicateTags: this.duplicateTags.slice(),\n      isLimitReached: this.isLimitReached,\n      // If the 'Add' button should be disabled\n      disableAddButton: this.disableAddButton\n    }, pick(this.$props, ['addButtonText', 'addButtonVariant', 'disabled', 'duplicateTagText', 'form', 'inputClass', 'invalidTagText', 'limit', 'limitTagsText', 'noTagRemove', 'placeholder', 'required', 'separator', 'size', 'state', 'tagClass', 'tagPills', 'tagRemoveLabel', 'tagVariant'])); // Generate the user interface\n\n\n    var $content = this.normalizeSlot(SLOT_NAME_DEFAULT, scope) || this.defaultRender(scope); // Generate the `aria-live` region for the current value(s)\n\n    var $output = h('output', {\n      staticClass: 'sr-only',\n      attrs: {\n        id: this.safeId('__selected_tags__'),\n        role: 'status',\n        for: computedInputId,\n        'aria-live': hasFocus ? 'polite' : 'off',\n        'aria-atomic': 'true',\n        'aria-relevant': 'additions text'\n      }\n    }, this.tags.join(', ')); // Removed tag live region\n\n    var $removed = h('div', {\n      staticClass: 'sr-only',\n      attrs: {\n        id: this.safeId('__removed_tags__'),\n        role: 'status',\n        'aria-live': hasFocus ? 'assertive' : 'off',\n        'aria-atomic': 'true'\n      }\n    }, this.removedTags.length > 0 ? \"(\".concat(this.tagRemovedLabel, \") \").concat(this.removedTags.join(', ')) : ''); // Add hidden inputs for form submission\n\n    var $hidden = h();\n\n    if (name && !disabled) {\n      // We add hidden inputs for each tag if a name is provided\n      // When there are currently no tags, a visually hidden input\n      // with empty value is rendered for proper required handling\n      var hasTags = tags.length > 0;\n      $hidden = (hasTags ? tags : ['']).map(function (tag) {\n        return h('input', {\n          class: {\n            'sr-only': !hasTags\n          },\n          attrs: {\n            type: hasTags ? 'hidden' : 'text',\n            value: tag,\n            required: required,\n            name: name,\n            form: form\n          },\n          key: \"tag_input_\".concat(tag)\n        });\n      });\n    } // Return the rendered output\n\n\n    return h('div', {\n      staticClass: 'b-form-tags form-control h-auto',\n      class: [{\n        focus: hasFocus && !noOuterFocus && !disabled,\n        disabled: disabled\n      }, this.sizeFormClass, this.stateClass],\n      attrs: {\n        id: this.safeId(),\n        role: 'group',\n        tabindex: disabled || noOuterFocus ? null : '-1',\n        'aria-describedby': this.safeId('__selected_tags__')\n      },\n      on: {\n        click: this.onClick,\n        focusin: this.onFocusin,\n        focusout: this.onFocusout\n      }\n    }, [$output, $removed, $content, $hidden]);\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}