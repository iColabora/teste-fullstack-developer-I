{"ast":null,"code":"import { get } from '../../../utils/get';\nimport { isDate, isFunction, isNumber, isNumeric, isUndefinedOrNull } from '../../../utils/inspect';\nimport { toFloat } from '../../../utils/number';\nimport { stringifyObjectValues } from '../../../utils/stringify-object-values';\n\nvar normalizeValue = function normalizeValue(value) {\n  if (isUndefinedOrNull(value)) {\n    return '';\n  }\n\n  if (isNumeric(value)) {\n    return toFloat(value, value);\n  }\n\n  return value;\n}; // Default sort compare routine\n//\n// TODO:\n//   Add option to sort by multiple columns (tri-state per column,\n//   plus order of columns in sort) where `sortBy` could be an array\n//   of objects `[ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]`\n//   or an array of arrays `[ ['foo','asc'], ['bar','desc'] ]`\n//   Multisort will most likely be handled in `mixin-sort.js` by\n//   calling this method for each sortBy\n\n\nexport var defaultSortCompare = function defaultSortCompare(a, b) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$sortBy = _ref.sortBy,\n      sortBy = _ref$sortBy === void 0 ? null : _ref$sortBy,\n      _ref$formatter = _ref.formatter,\n      formatter = _ref$formatter === void 0 ? null : _ref$formatter,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? undefined : _ref$locale,\n      _ref$localeOptions = _ref.localeOptions,\n      localeOptions = _ref$localeOptions === void 0 ? {} : _ref$localeOptions,\n      _ref$nullLast = _ref.nullLast,\n      nullLast = _ref$nullLast === void 0 ? false : _ref$nullLast; // Get the value by `sortBy`\n\n\n  var aa = get(a, sortBy, null);\n  var bb = get(b, sortBy, null); // Apply user-provided formatter\n\n  if (isFunction(formatter)) {\n    aa = formatter(aa, sortBy, a);\n    bb = formatter(bb, sortBy, b);\n  } // Internally normalize value\n  // `null` / `undefined` => ''\n  // `'0'` => `0`\n\n\n  aa = normalizeValue(aa);\n  bb = normalizeValue(bb);\n\n  if (isDate(aa) && isDate(bb) || isNumber(aa) && isNumber(bb)) {\n    // Special case for comparing dates and numbers\n    // Internally dates are compared via their epoch number values\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  } else if (nullLast && aa === '' && bb !== '') {\n    // Special case when sorting `null` / `undefined` / '' last\n    return 1;\n  } else if (nullLast && aa !== '' && bb === '') {\n    // Special case when sorting `null` / `undefined` / '' last\n    return -1;\n  } // Do localized string comparison\n\n\n  return stringifyObjectValues(aa).localeCompare(stringifyObjectValues(bb), locale, localeOptions);\n};","map":{"version":3,"names":["get","isDate","isFunction","isNumber","isNumeric","isUndefinedOrNull","toFloat","stringifyObjectValues","normalizeValue","value","defaultSortCompare","a","b","_ref","arguments","length","undefined","_ref$sortBy","sortBy","_ref$formatter","formatter","_ref$locale","locale","_ref$localeOptions","localeOptions","_ref$nullLast","nullLast","aa","bb","localeCompare"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/components/table/helpers/default-sort-compare.js"],"sourcesContent":["import { get } from '../../../utils/get';\nimport { isDate, isFunction, isNumber, isNumeric, isUndefinedOrNull } from '../../../utils/inspect';\nimport { toFloat } from '../../../utils/number';\nimport { stringifyObjectValues } from '../../../utils/stringify-object-values';\n\nvar normalizeValue = function normalizeValue(value) {\n  if (isUndefinedOrNull(value)) {\n    return '';\n  }\n\n  if (isNumeric(value)) {\n    return toFloat(value, value);\n  }\n\n  return value;\n}; // Default sort compare routine\n//\n// TODO:\n//   Add option to sort by multiple columns (tri-state per column,\n//   plus order of columns in sort) where `sortBy` could be an array\n//   of objects `[ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]`\n//   or an array of arrays `[ ['foo','asc'], ['bar','desc'] ]`\n//   Multisort will most likely be handled in `mixin-sort.js` by\n//   calling this method for each sortBy\n\n\nexport var defaultSortCompare = function defaultSortCompare(a, b) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$sortBy = _ref.sortBy,\n      sortBy = _ref$sortBy === void 0 ? null : _ref$sortBy,\n      _ref$formatter = _ref.formatter,\n      formatter = _ref$formatter === void 0 ? null : _ref$formatter,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? undefined : _ref$locale,\n      _ref$localeOptions = _ref.localeOptions,\n      localeOptions = _ref$localeOptions === void 0 ? {} : _ref$localeOptions,\n      _ref$nullLast = _ref.nullLast,\n      nullLast = _ref$nullLast === void 0 ? false : _ref$nullLast;\n\n  // Get the value by `sortBy`\n  var aa = get(a, sortBy, null);\n  var bb = get(b, sortBy, null); // Apply user-provided formatter\n\n  if (isFunction(formatter)) {\n    aa = formatter(aa, sortBy, a);\n    bb = formatter(bb, sortBy, b);\n  } // Internally normalize value\n  // `null` / `undefined` => ''\n  // `'0'` => `0`\n\n\n  aa = normalizeValue(aa);\n  bb = normalizeValue(bb);\n\n  if (isDate(aa) && isDate(bb) || isNumber(aa) && isNumber(bb)) {\n    // Special case for comparing dates and numbers\n    // Internally dates are compared via their epoch number values\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  } else if (nullLast && aa === '' && bb !== '') {\n    // Special case when sorting `null` / `undefined` / '' last\n    return 1;\n  } else if (nullLast && aa !== '' && bb === '') {\n    // Special case when sorting `null` / `undefined` / '' last\n    return -1;\n  } // Do localized string comparison\n\n\n  return stringifyObjectValues(aa).localeCompare(stringifyObjectValues(bb), locale, localeOptions);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}