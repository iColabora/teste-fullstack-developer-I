{"ast":null,"code":"import { HAS_PASSIVE_EVENT_SUPPORT } from '../constants/env';\nimport { ROOT_EVENT_NAME_PREFIX, ROOT_EVENT_NAME_SEPARATOR } from '../constants/events';\nimport { RX_BV_PREFIX } from '../constants/regex';\nimport { isObject } from './inspect';\nimport { kebabCase } from './string'; // --- Utils ---\n// Normalize event options based on support of passive option\n// Exported only for testing purposes\n\nexport var parseEventOptions = function parseEventOptions(options) {\n  /* istanbul ignore else: can't test in JSDOM, as it supports passive */\n  if (HAS_PASSIVE_EVENT_SUPPORT) {\n    return isObject(options) ? options : {\n      capture: !!options || false\n    };\n  } else {\n    // Need to translate to actual Boolean value\n    return !!(isObject(options) ? options.capture : options);\n  }\n}; // Attach an event listener to an element\n\nexport var eventOn = function eventOn(el, eventName, handler, options) {\n  if (el && el.addEventListener) {\n    el.addEventListener(eventName, handler, parseEventOptions(options));\n  }\n}; // Remove an event listener from an element\n\nexport var eventOff = function eventOff(el, eventName, handler, options) {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(eventName, handler, parseEventOptions(options));\n  }\n}; // Utility method to add/remove a event listener based on first argument (boolean)\n// It passes all other arguments to the `eventOn()` or `eventOff` method\n\nexport var eventOnOff = function eventOnOff(on) {\n  var method = on ? eventOn : eventOff;\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  method.apply(void 0, args);\n}; // Utility method to prevent the default event handling and propagation\n\nexport var stopEvent = function stopEvent(event) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$preventDefault = _ref.preventDefault,\n      preventDefault = _ref$preventDefault === void 0 ? true : _ref$preventDefault,\n      _ref$propagation = _ref.propagation,\n      propagation = _ref$propagation === void 0 ? true : _ref$propagation,\n      _ref$immediatePropaga = _ref.immediatePropagation,\n      immediatePropagation = _ref$immediatePropaga === void 0 ? false : _ref$immediatePropaga;\n\n  if (preventDefault) {\n    event.preventDefault();\n  }\n\n  if (propagation) {\n    event.stopPropagation();\n  }\n\n  if (immediatePropagation) {\n    event.stopImmediatePropagation();\n  }\n}; // Helper method to convert a component/directive name to a base event name\n// `getBaseEventName('BNavigationItem')` => 'navigation-item'\n// `getBaseEventName('BVToggle')` => 'toggle'\n\nvar getBaseEventName = function getBaseEventName(value) {\n  return kebabCase(value.replace(RX_BV_PREFIX, ''));\n}; // Get a root event name by component/directive and event name\n// `getBaseEventName('BModal', 'show')` => 'bv::modal::show'\n\n\nexport var getRootEventName = function getRootEventName(name, eventName) {\n  return [ROOT_EVENT_NAME_PREFIX, getBaseEventName(name), eventName].join(ROOT_EVENT_NAME_SEPARATOR);\n}; // Get a root action event name by component/directive and action name\n// `getRootActionEventName('BModal', 'show')` => 'bv::show::modal'\n\nexport var getRootActionEventName = function getRootActionEventName(name, actionName) {\n  return [ROOT_EVENT_NAME_PREFIX, actionName, getBaseEventName(name)].join(ROOT_EVENT_NAME_SEPARATOR);\n};","map":{"version":3,"names":["HAS_PASSIVE_EVENT_SUPPORT","ROOT_EVENT_NAME_PREFIX","ROOT_EVENT_NAME_SEPARATOR","RX_BV_PREFIX","isObject","kebabCase","parseEventOptions","options","capture","eventOn","el","eventName","handler","addEventListener","eventOff","removeEventListener","eventOnOff","on","method","_len","arguments","length","args","Array","_key","apply","stopEvent","event","_ref","undefined","_ref$preventDefault","preventDefault","_ref$propagation","propagation","_ref$immediatePropaga","immediatePropagation","stopPropagation","stopImmediatePropagation","getBaseEventName","value","replace","getRootEventName","name","join","getRootActionEventName","actionName"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/utils/events.js"],"sourcesContent":["import { HAS_PASSIVE_EVENT_SUPPORT } from '../constants/env';\nimport { ROOT_EVENT_NAME_PREFIX, ROOT_EVENT_NAME_SEPARATOR } from '../constants/events';\nimport { RX_BV_PREFIX } from '../constants/regex';\nimport { isObject } from './inspect';\nimport { kebabCase } from './string'; // --- Utils ---\n// Normalize event options based on support of passive option\n// Exported only for testing purposes\n\nexport var parseEventOptions = function parseEventOptions(options) {\n  /* istanbul ignore else: can't test in JSDOM, as it supports passive */\n  if (HAS_PASSIVE_EVENT_SUPPORT) {\n    return isObject(options) ? options : {\n      capture: !!options || false\n    };\n  } else {\n    // Need to translate to actual Boolean value\n    return !!(isObject(options) ? options.capture : options);\n  }\n}; // Attach an event listener to an element\n\nexport var eventOn = function eventOn(el, eventName, handler, options) {\n  if (el && el.addEventListener) {\n    el.addEventListener(eventName, handler, parseEventOptions(options));\n  }\n}; // Remove an event listener from an element\n\nexport var eventOff = function eventOff(el, eventName, handler, options) {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(eventName, handler, parseEventOptions(options));\n  }\n}; // Utility method to add/remove a event listener based on first argument (boolean)\n// It passes all other arguments to the `eventOn()` or `eventOff` method\n\nexport var eventOnOff = function eventOnOff(on) {\n  var method = on ? eventOn : eventOff;\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  method.apply(void 0, args);\n}; // Utility method to prevent the default event handling and propagation\n\nexport var stopEvent = function stopEvent(event) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$preventDefault = _ref.preventDefault,\n      preventDefault = _ref$preventDefault === void 0 ? true : _ref$preventDefault,\n      _ref$propagation = _ref.propagation,\n      propagation = _ref$propagation === void 0 ? true : _ref$propagation,\n      _ref$immediatePropaga = _ref.immediatePropagation,\n      immediatePropagation = _ref$immediatePropaga === void 0 ? false : _ref$immediatePropaga;\n\n  if (preventDefault) {\n    event.preventDefault();\n  }\n\n  if (propagation) {\n    event.stopPropagation();\n  }\n\n  if (immediatePropagation) {\n    event.stopImmediatePropagation();\n  }\n}; // Helper method to convert a component/directive name to a base event name\n// `getBaseEventName('BNavigationItem')` => 'navigation-item'\n// `getBaseEventName('BVToggle')` => 'toggle'\n\nvar getBaseEventName = function getBaseEventName(value) {\n  return kebabCase(value.replace(RX_BV_PREFIX, ''));\n}; // Get a root event name by component/directive and event name\n// `getBaseEventName('BModal', 'show')` => 'bv::modal::show'\n\n\nexport var getRootEventName = function getRootEventName(name, eventName) {\n  return [ROOT_EVENT_NAME_PREFIX, getBaseEventName(name), eventName].join(ROOT_EVENT_NAME_SEPARATOR);\n}; // Get a root action event name by component/directive and action name\n// `getRootActionEventName('BModal', 'show')` => 'bv::show::modal'\n\nexport var getRootActionEventName = function getRootActionEventName(name, actionName) {\n  return [ROOT_EVENT_NAME_PREFIX, actionName, getBaseEventName(name)].join(ROOT_EVENT_NAME_SEPARATOR);\n};"],"mappings":"AAAA,SAASA,yBAAT,QAA0C,kBAA1C;AACA,SAASC,sBAAT,EAAiCC,yBAAjC,QAAkE,qBAAlE;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B,C,CAAsC;AACtC;AACA;;AAEA,OAAO,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,OAA3B,EAAoC;EACjE;EACA,IAAIP,yBAAJ,EAA+B;IAC7B,OAAOI,QAAQ,CAACG,OAAD,CAAR,GAAoBA,OAApB,GAA8B;MACnCC,OAAO,EAAE,CAAC,CAACD,OAAF,IAAa;IADa,CAArC;EAGD,CAJD,MAIO;IACL;IACA,OAAO,CAAC,EAAEH,QAAQ,CAACG,OAAD,CAAR,GAAoBA,OAAO,CAACC,OAA5B,GAAsCD,OAAxC,CAAR;EACD;AACF,CAVM,C,CAUJ;;AAEH,OAAO,IAAIE,OAAO,GAAG,SAASA,OAAT,CAAiBC,EAAjB,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyCL,OAAzC,EAAkD;EACrE,IAAIG,EAAE,IAAIA,EAAE,CAACG,gBAAb,EAA+B;IAC7BH,EAAE,CAACG,gBAAH,CAAoBF,SAApB,EAA+BC,OAA/B,EAAwCN,iBAAiB,CAACC,OAAD,CAAzD;EACD;AACF,CAJM,C,CAIJ;;AAEH,OAAO,IAAIO,QAAQ,GAAG,SAASA,QAAT,CAAkBJ,EAAlB,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CL,OAA1C,EAAmD;EACvE,IAAIG,EAAE,IAAIA,EAAE,CAACK,mBAAb,EAAkC;IAChCL,EAAE,CAACK,mBAAH,CAAuBJ,SAAvB,EAAkCC,OAAlC,EAA2CN,iBAAiB,CAACC,OAAD,CAA5D;EACD;AACF,CAJM,C,CAIJ;AACH;;AAEA,OAAO,IAAIS,UAAU,GAAG,SAASA,UAAT,CAAoBC,EAApB,EAAwB;EAC9C,IAAIC,MAAM,GAAGD,EAAE,GAAGR,OAAH,GAAaK,QAA5B;;EAEA,KAAK,IAAIK,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;IAC1GF,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;EACD;;EAEDN,MAAM,CAACO,KAAP,CAAa,KAAK,CAAlB,EAAqBH,IAArB;AACD,CARM,C,CAQJ;;AAEH,OAAO,IAAII,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;EAC/C,IAAIC,IAAI,GAAGR,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBS,SAAzC,GAAqDT,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;EAAA,IACIU,mBAAmB,GAAGF,IAAI,CAACG,cAD/B;EAAA,IAEIA,cAAc,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,IAAjC,GAAwCA,mBAF7D;EAAA,IAGIE,gBAAgB,GAAGJ,IAAI,CAACK,WAH5B;EAAA,IAIIA,WAAW,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,IAA9B,GAAqCA,gBAJvD;EAAA,IAKIE,qBAAqB,GAAGN,IAAI,CAACO,oBALjC;EAAA,IAMIA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBANtE;;EAQA,IAAIH,cAAJ,EAAoB;IAClBJ,KAAK,CAACI,cAAN;EACD;;EAED,IAAIE,WAAJ,EAAiB;IACfN,KAAK,CAACS,eAAN;EACD;;EAED,IAAID,oBAAJ,EAA0B;IACxBR,KAAK,CAACU,wBAAN;EACD;AACF,CApBM,C,CAoBJ;AACH;AACA;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;EACtD,OAAOlC,SAAS,CAACkC,KAAK,CAACC,OAAN,CAAcrC,YAAd,EAA4B,EAA5B,CAAD,CAAhB;AACD,CAFD,C,CAEG;AACH;;;AAGA,OAAO,IAAIsC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC/B,SAAhC,EAA2C;EACvE,OAAO,CAACV,sBAAD,EAAyBqC,gBAAgB,CAACI,IAAD,CAAzC,EAAiD/B,SAAjD,EAA4DgC,IAA5D,CAAiEzC,yBAAjE,CAAP;AACD,CAFM,C,CAEJ;AACH;;AAEA,OAAO,IAAI0C,sBAAsB,GAAG,SAASA,sBAAT,CAAgCF,IAAhC,EAAsCG,UAAtC,EAAkD;EACpF,OAAO,CAAC5C,sBAAD,EAAyB4C,UAAzB,EAAqCP,gBAAgB,CAACI,IAAD,CAArD,EAA6DC,IAA7D,CAAkEzC,yBAAlE,CAAP;AACD,CAFM"},"metadata":{},"sourceType":"module"}