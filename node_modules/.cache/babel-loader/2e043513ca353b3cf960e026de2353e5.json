{"ast":null,"code":"import { Vue } from '../../vue';\nimport { NAME_COLLAPSE, NAME_NAVBAR_TOGGLE } from '../../constants/components';\nimport { EVENT_NAME_CLICK } from '../../constants/events';\nimport { PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { getRootEventName } from '../../utils/events';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { listenOnRootMixin } from '../../mixins/listen-on-root';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { VBToggle } from '../../directives/toggle/toggle'; // --- Constants ---\n\nvar CLASS_NAME = 'navbar-toggler';\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state');\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state'); // --- Props ---\n\nexport var props = makePropsConfigurable({\n  disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n  label: makeProp(PROP_TYPE_STRING, 'Toggle navigation'),\n  target: makeProp(PROP_TYPE_ARRAY_STRING, undefined, true) // Required\n\n}, NAME_NAVBAR_TOGGLE); // --- Main component ---\n// @vue/component\n\nexport var BNavbarToggle = /*#__PURE__*/Vue.extend({\n  name: NAME_NAVBAR_TOGGLE,\n  directives: {\n    VBToggle: VBToggle\n  },\n  mixins: [listenOnRootMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      toggleState: false\n    };\n  },\n  created: function created() {\n    this.listenOnRoot(ROOT_EVENT_NAME_STATE, this.handleStateEvent);\n    this.listenOnRoot(ROOT_EVENT_NAME_SYNC_STATE, this.handleStateEvent);\n  },\n  methods: {\n    onClick: function onClick(event) {\n      if (!this.disabled) {\n        // Emit courtesy `click` event\n        this.$emit(EVENT_NAME_CLICK, event);\n      }\n    },\n    handleStateEvent: function handleStateEvent(id, state) {\n      // We listen for state events so that we can pass the\n      // boolean expanded state to the default scoped slot\n      if (id === this.target) {\n        this.toggleState = state;\n      }\n    }\n  },\n  render: function render(h) {\n    var disabled = this.disabled;\n    return h('button', {\n      staticClass: CLASS_NAME,\n      class: {\n        disabled: disabled\n      },\n      directives: [{\n        name: 'VBToggle',\n        value: this.target\n      }],\n      attrs: {\n        type: 'button',\n        disabled: disabled,\n        'aria-label': this.label\n      },\n      on: {\n        click: this.onClick\n      }\n    }, [this.normalizeSlot(SLOT_NAME_DEFAULT, {\n      expanded: this.toggleState\n    }) || h('span', {\n      staticClass: \"\".concat(CLASS_NAME, \"-icon\")\n    })]);\n  }\n});","map":{"version":3,"names":["Vue","NAME_COLLAPSE","NAME_NAVBAR_TOGGLE","EVENT_NAME_CLICK","PROP_TYPE_ARRAY_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","SLOT_NAME_DEFAULT","getRootEventName","makeProp","makePropsConfigurable","listenOnRootMixin","normalizeSlotMixin","VBToggle","CLASS_NAME","ROOT_EVENT_NAME_STATE","ROOT_EVENT_NAME_SYNC_STATE","props","disabled","label","target","undefined","BNavbarToggle","extend","name","directives","mixins","data","toggleState","created","listenOnRoot","handleStateEvent","methods","onClick","event","$emit","id","state","render","h","staticClass","class","value","attrs","type","on","click","normalizeSlot","expanded","concat"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/components/navbar/navbar-toggle.js"],"sourcesContent":["import { Vue } from '../../vue';\nimport { NAME_COLLAPSE, NAME_NAVBAR_TOGGLE } from '../../constants/components';\nimport { EVENT_NAME_CLICK } from '../../constants/events';\nimport { PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { getRootEventName } from '../../utils/events';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { listenOnRootMixin } from '../../mixins/listen-on-root';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { VBToggle } from '../../directives/toggle/toggle'; // --- Constants ---\n\nvar CLASS_NAME = 'navbar-toggler';\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state');\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state'); // --- Props ---\n\nexport var props = makePropsConfigurable({\n  disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n  label: makeProp(PROP_TYPE_STRING, 'Toggle navigation'),\n  target: makeProp(PROP_TYPE_ARRAY_STRING, undefined, true) // Required\n\n}, NAME_NAVBAR_TOGGLE); // --- Main component ---\n// @vue/component\n\nexport var BNavbarToggle = /*#__PURE__*/Vue.extend({\n  name: NAME_NAVBAR_TOGGLE,\n  directives: {\n    VBToggle: VBToggle\n  },\n  mixins: [listenOnRootMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      toggleState: false\n    };\n  },\n  created: function created() {\n    this.listenOnRoot(ROOT_EVENT_NAME_STATE, this.handleStateEvent);\n    this.listenOnRoot(ROOT_EVENT_NAME_SYNC_STATE, this.handleStateEvent);\n  },\n  methods: {\n    onClick: function onClick(event) {\n      if (!this.disabled) {\n        // Emit courtesy `click` event\n        this.$emit(EVENT_NAME_CLICK, event);\n      }\n    },\n    handleStateEvent: function handleStateEvent(id, state) {\n      // We listen for state events so that we can pass the\n      // boolean expanded state to the default scoped slot\n      if (id === this.target) {\n        this.toggleState = state;\n      }\n    }\n  },\n  render: function render(h) {\n    var disabled = this.disabled;\n    return h('button', {\n      staticClass: CLASS_NAME,\n      class: {\n        disabled: disabled\n      },\n      directives: [{\n        name: 'VBToggle',\n        value: this.target\n      }],\n      attrs: {\n        type: 'button',\n        disabled: disabled,\n        'aria-label': this.label\n      },\n      on: {\n        click: this.onClick\n      }\n    }, [this.normalizeSlot(SLOT_NAME_DEFAULT, {\n      expanded: this.toggleState\n    }) || h('span', {\n      staticClass: \"\".concat(CLASS_NAME, \"-icon\")\n    })]);\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}