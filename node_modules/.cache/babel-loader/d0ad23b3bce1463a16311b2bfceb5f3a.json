{"ast":null,"code":"// Generic collapse transion helper component\n//\n// Note:\n//   Applies the classes `collapse`, `show` and `collapsing`\n//   during the enter/leave transition phases only\n//   Although it appears that Vue may be leaving the classes\n//   in-place after the transition completes\nimport { Vue, mergeData } from '../../../vue';\nimport { NAME_COLLAPSE_HELPER } from '../../../constants/components';\nimport { PROP_TYPE_BOOLEAN } from '../../../constants/props';\nimport { getBCR, reflow, removeStyle, requestAF, setStyle } from '../../../utils/dom';\nimport { makeProp } from '../../../utils/props'; // --- Helper methods ---\n// Transition event handler helpers\n\nvar onEnter = function onEnter(el) {\n  setStyle(el, 'height', 0); // In a `requestAF()` for `appear` to work\n\n  requestAF(function () {\n    reflow(el);\n    setStyle(el, 'height', \"\".concat(el.scrollHeight, \"px\"));\n  });\n};\n\nvar onAfterEnter = function onAfterEnter(el) {\n  removeStyle(el, 'height');\n};\n\nvar onLeave = function onLeave(el) {\n  setStyle(el, 'height', 'auto');\n  setStyle(el, 'display', 'block');\n  setStyle(el, 'height', \"\".concat(getBCR(el).height, \"px\"));\n  reflow(el);\n  setStyle(el, 'height', 0);\n};\n\nvar onAfterLeave = function onAfterLeave(el) {\n  removeStyle(el, 'height');\n}; // --- Constants ---\n// Default transition props\n// `appear` will use the enter classes\n\n\nvar TRANSITION_PROPS = {\n  css: true,\n  enterClass: '',\n  enterActiveClass: 'collapsing',\n  enterToClass: 'collapse show',\n  leaveClass: 'collapse show',\n  leaveActiveClass: 'collapsing',\n  leaveToClass: 'collapse'\n}; // Default transition handlers\n// `appear` will use the enter handlers\n\nvar TRANSITION_HANDLERS = {\n  enter: onEnter,\n  afterEnter: onAfterEnter,\n  leave: onLeave,\n  afterLeave: onAfterLeave\n}; // --- Main component ---\n\nexport var props = {\n  // // If `true` (and `visible` is `true` on mount), animate initially visible\n  appear: makeProp(PROP_TYPE_BOOLEAN, false)\n}; // --- Main component ---\n// @vue/component\n\nexport var BVCollapse = /*#__PURE__*/Vue.extend({\n  name: NAME_COLLAPSE_HELPER,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    return h('transition', // We merge in the `appear` prop last\n    mergeData(data, {\n      props: TRANSITION_PROPS,\n      on: TRANSITION_HANDLERS\n    }, {\n      props: props\n    }), // Note: `<transition>` supports a single root element only\n    children);\n  }\n});","map":{"version":3,"names":["Vue","mergeData","NAME_COLLAPSE_HELPER","PROP_TYPE_BOOLEAN","getBCR","reflow","removeStyle","requestAF","setStyle","makeProp","onEnter","el","concat","scrollHeight","onAfterEnter","onLeave","height","onAfterLeave","TRANSITION_PROPS","css","enterClass","enterActiveClass","enterToClass","leaveClass","leaveActiveClass","leaveToClass","TRANSITION_HANDLERS","enter","afterEnter","leave","afterLeave","props","appear","BVCollapse","extend","name","functional","render","h","_ref","data","children","on"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/components/collapse/helpers/bv-collapse.js"],"sourcesContent":["// Generic collapse transion helper component\n//\n// Note:\n//   Applies the classes `collapse`, `show` and `collapsing`\n//   during the enter/leave transition phases only\n//   Although it appears that Vue may be leaving the classes\n//   in-place after the transition completes\nimport { Vue, mergeData } from '../../../vue';\nimport { NAME_COLLAPSE_HELPER } from '../../../constants/components';\nimport { PROP_TYPE_BOOLEAN } from '../../../constants/props';\nimport { getBCR, reflow, removeStyle, requestAF, setStyle } from '../../../utils/dom';\nimport { makeProp } from '../../../utils/props'; // --- Helper methods ---\n// Transition event handler helpers\n\nvar onEnter = function onEnter(el) {\n  setStyle(el, 'height', 0); // In a `requestAF()` for `appear` to work\n\n  requestAF(function () {\n    reflow(el);\n    setStyle(el, 'height', \"\".concat(el.scrollHeight, \"px\"));\n  });\n};\n\nvar onAfterEnter = function onAfterEnter(el) {\n  removeStyle(el, 'height');\n};\n\nvar onLeave = function onLeave(el) {\n  setStyle(el, 'height', 'auto');\n  setStyle(el, 'display', 'block');\n  setStyle(el, 'height', \"\".concat(getBCR(el).height, \"px\"));\n  reflow(el);\n  setStyle(el, 'height', 0);\n};\n\nvar onAfterLeave = function onAfterLeave(el) {\n  removeStyle(el, 'height');\n}; // --- Constants ---\n// Default transition props\n// `appear` will use the enter classes\n\n\nvar TRANSITION_PROPS = {\n  css: true,\n  enterClass: '',\n  enterActiveClass: 'collapsing',\n  enterToClass: 'collapse show',\n  leaveClass: 'collapse show',\n  leaveActiveClass: 'collapsing',\n  leaveToClass: 'collapse'\n}; // Default transition handlers\n// `appear` will use the enter handlers\n\nvar TRANSITION_HANDLERS = {\n  enter: onEnter,\n  afterEnter: onAfterEnter,\n  leave: onLeave,\n  afterLeave: onAfterLeave\n}; // --- Main component ---\n\nexport var props = {\n  // // If `true` (and `visible` is `true` on mount), animate initially visible\n  appear: makeProp(PROP_TYPE_BOOLEAN, false)\n}; // --- Main component ---\n// @vue/component\n\nexport var BVCollapse = /*#__PURE__*/Vue.extend({\n  name: NAME_COLLAPSE_HELPER,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    return h('transition', // We merge in the `appear` prop last\n    mergeData(data, {\n      props: TRANSITION_PROPS,\n      on: TRANSITION_HANDLERS\n    }, {\n      props: props\n    }), // Note: `<transition>` supports a single root element only\n    children);\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}