{"ast":null,"code":"// Number utilities\n// Converts a value (string, number, etc.) to an integer number\n// Assumes radix base 10\nexport var toInteger = function toInteger(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NaN;\n  var integer = parseInt(value, 10);\n  return isNaN(integer) ? defaultValue : integer;\n}; // Converts a value (string, number, etc.) to a number\n\nexport var toFloat = function toFloat(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NaN;\n  var float = parseFloat(value);\n  return isNaN(float) ? defaultValue : float;\n}; // Converts a value (string, number, etc.) to a string\n// representation with `precision` digits after the decimal\n// Returns the string 'NaN' if the value cannot be converted\n\nexport var toFixed = function toFixed(val, precision) {\n  return toFloat(val).toFixed(toInteger(precision, 0));\n};","map":{"version":3,"names":["toInteger","value","defaultValue","arguments","length","undefined","NaN","integer","parseInt","isNaN","toFloat","float","parseFloat","toFixed","val","precision"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/utils/number.js"],"sourcesContent":["// Number utilities\n// Converts a value (string, number, etc.) to an integer number\n// Assumes radix base 10\nexport var toInteger = function toInteger(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NaN;\n  var integer = parseInt(value, 10);\n  return isNaN(integer) ? defaultValue : integer;\n}; // Converts a value (string, number, etc.) to a number\n\nexport var toFloat = function toFloat(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NaN;\n  var float = parseFloat(value);\n  return isNaN(float) ? defaultValue : float;\n}; // Converts a value (string, number, etc.) to a string\n// representation with `precision` digits after the decimal\n// Returns the string 'NaN' if the value cannot be converted\n\nexport var toFixed = function toFixed(val, precision) {\n  return toFloat(val).toFixed(toInteger(precision, 0));\n};"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,IAAIA,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;EAC/C,IAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEG,GAAvF;EACA,IAAIC,OAAO,GAAGC,QAAQ,CAACP,KAAD,EAAQ,EAAR,CAAtB;EACA,OAAOQ,KAAK,CAACF,OAAD,CAAL,GAAiBL,YAAjB,GAAgCK,OAAvC;AACD,CAJM,C,CAIJ;;AAEH,OAAO,IAAIG,OAAO,GAAG,SAASA,OAAT,CAAiBT,KAAjB,EAAwB;EAC3C,IAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEG,GAAvF;EACA,IAAIK,KAAK,GAAGC,UAAU,CAACX,KAAD,CAAtB;EACA,OAAOQ,KAAK,CAACE,KAAD,CAAL,GAAeT,YAAf,GAA8BS,KAArC;AACD,CAJM,C,CAIJ;AACH;AACA;;AAEA,OAAO,IAAIE,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,SAAtB,EAAiC;EACpD,OAAOL,OAAO,CAACI,GAAD,CAAP,CAAaD,OAAb,CAAqBb,SAAS,CAACe,SAAD,EAAY,CAAZ,CAA9B,CAAP;AACD,CAFM"},"metadata":{},"sourceType":"module"}