{"ast":null,"code":"import { isObject } from '../../../utils/inspect';\nimport { stringifyObjectValues } from '../../../utils/stringify-object-values';\nimport { sanitizeRow } from './sanitize-row'; // Stringifies the values of a record, ignoring any special top level field keys\n// TODO: Add option to stringify `scopedSlot` items\n\nexport var stringifyRecordValues = function stringifyRecordValues(row, ignoreFields, includeFields, fieldsObj) {\n  return isObject(row) ? stringifyObjectValues(sanitizeRow(row, ignoreFields, includeFields, fieldsObj)) :\n  /* istanbul ignore next */\n  '';\n};","map":{"version":3,"names":["isObject","stringifyObjectValues","sanitizeRow","stringifyRecordValues","row","ignoreFields","includeFields","fieldsObj"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/components/table/helpers/stringify-record-values.js"],"sourcesContent":["import { isObject } from '../../../utils/inspect';\nimport { stringifyObjectValues } from '../../../utils/stringify-object-values';\nimport { sanitizeRow } from './sanitize-row'; // Stringifies the values of a record, ignoring any special top level field keys\n// TODO: Add option to stringify `scopedSlot` items\n\nexport var stringifyRecordValues = function stringifyRecordValues(row, ignoreFields, includeFields, fieldsObj) {\n  return isObject(row) ? stringifyObjectValues(sanitizeRow(row, ignoreFields, includeFields, fieldsObj)) :\n  /* istanbul ignore next */\n  '';\n};"],"mappings":"AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAA8C;AAC9C;;AAEA,OAAO,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,GAA/B,EAAoCC,YAApC,EAAkDC,aAAlD,EAAiEC,SAAjE,EAA4E;EAC7G,OAAOP,QAAQ,CAACI,GAAD,CAAR,GAAgBH,qBAAqB,CAACC,WAAW,CAACE,GAAD,EAAMC,YAAN,EAAoBC,aAApB,EAAmCC,SAAnC,CAAZ,CAArC;EACP;EACA,EAFA;AAGD,CAJM"},"metadata":{},"sourceType":"module"}