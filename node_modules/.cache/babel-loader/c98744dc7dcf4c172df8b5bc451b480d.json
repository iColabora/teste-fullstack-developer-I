{"ast":null,"code":"import { Vue } from '../../vue';\nimport { NAME_AVATAR_GROUP } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { mathMax, mathMin } from '../../utils/math';\nimport { toFloat } from '../../utils/number';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { computeSize } from './avatar'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  overlap: makeProp(PROP_TYPE_NUMBER_STRING, 0.3),\n  // Child avatars will prefer this prop (if set) over their own\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  // Child avatars will always use this over their own size\n  size: makeProp(PROP_TYPE_STRING),\n  // Child avatars will prefer this prop (if set) over their own\n  square: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  // Child avatars will prefer this variant over their own\n  variant: makeProp(PROP_TYPE_STRING)\n}, NAME_AVATAR_GROUP); // --- Main component ---\n// @vue/component\n\nexport var BAvatarGroup = /*#__PURE__*/Vue.extend({\n  name: NAME_AVATAR_GROUP,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvAvatarGroup: this\n    };\n  },\n  props: props,\n  computed: {\n    computedSize: function computedSize() {\n      return computeSize(this.size);\n    },\n    overlapScale: function overlapScale() {\n      return mathMin(mathMax(toFloat(this.overlap, 0), 0), 1) / 2;\n    },\n    paddingStyle: function paddingStyle() {\n      var value = this.computedSize;\n      value = value ? \"calc(\".concat(value, \" * \").concat(this.overlapScale, \")\") : null;\n      return value ? {\n        paddingLeft: value,\n        paddingRight: value\n      } : {};\n    }\n  },\n  render: function render(h) {\n    var $inner = h('div', {\n      staticClass: 'b-avatar-group-inner',\n      style: this.paddingStyle\n    }, this.normalizeSlot());\n    return h(this.tag, {\n      staticClass: 'b-avatar-group',\n      attrs: {\n        role: 'group'\n      }\n    }, [$inner]);\n  }\n});","map":{"version":3,"names":["Vue","NAME_AVATAR_GROUP","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_STRING","PROP_TYPE_NUMBER_STRING","PROP_TYPE_STRING","mathMax","mathMin","toFloat","makeProp","makePropsConfigurable","normalizeSlotMixin","computeSize","props","overlap","rounded","size","square","tag","variant","BAvatarGroup","extend","name","mixins","provide","bvAvatarGroup","computed","computedSize","overlapScale","paddingStyle","value","concat","paddingLeft","paddingRight","render","h","$inner","staticClass","style","normalizeSlot","attrs","role"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js"],"sourcesContent":["import { Vue } from '../../vue';\nimport { NAME_AVATAR_GROUP } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { mathMax, mathMin } from '../../utils/math';\nimport { toFloat } from '../../utils/number';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { computeSize } from './avatar'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  overlap: makeProp(PROP_TYPE_NUMBER_STRING, 0.3),\n  // Child avatars will prefer this prop (if set) over their own\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  // Child avatars will always use this over their own size\n  size: makeProp(PROP_TYPE_STRING),\n  // Child avatars will prefer this prop (if set) over their own\n  square: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  // Child avatars will prefer this variant over their own\n  variant: makeProp(PROP_TYPE_STRING)\n}, NAME_AVATAR_GROUP); // --- Main component ---\n// @vue/component\n\nexport var BAvatarGroup = /*#__PURE__*/Vue.extend({\n  name: NAME_AVATAR_GROUP,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvAvatarGroup: this\n    };\n  },\n  props: props,\n  computed: {\n    computedSize: function computedSize() {\n      return computeSize(this.size);\n    },\n    overlapScale: function overlapScale() {\n      return mathMin(mathMax(toFloat(this.overlap, 0), 0), 1) / 2;\n    },\n    paddingStyle: function paddingStyle() {\n      var value = this.computedSize;\n      value = value ? \"calc(\".concat(value, \" * \").concat(this.overlapScale, \")\") : null;\n      return value ? {\n        paddingLeft: value,\n        paddingRight: value\n      } : {};\n    }\n  },\n  render: function render(h) {\n    var $inner = h('div', {\n      staticClass: 'b-avatar-group-inner',\n      style: this.paddingStyle\n    }, this.normalizeSlot());\n    return h(this.tag, {\n      staticClass: 'b-avatar-group',\n      attrs: {\n        role: 'group'\n      }\n    }, [$inner]);\n  }\n});"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,iBAAT,EAA4BC,wBAA5B,EAAsDC,uBAAtD,EAA+EC,gBAA/E,QAAuG,uBAAvG;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,EAAmBC,qBAAnB,QAAgD,mBAAhD;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,WAAT,QAA4B,UAA5B,C,CAAwC;;AAExC,OAAO,IAAIC,KAAK,GAAGH,qBAAqB,CAAC;EACvCI,OAAO,EAAEL,QAAQ,CAACL,uBAAD,EAA0B,GAA1B,CADsB;EAEvC;EACAW,OAAO,EAAEN,QAAQ,CAACN,wBAAD,EAA2B,KAA3B,CAHsB;EAIvC;EACAa,IAAI,EAAEP,QAAQ,CAACJ,gBAAD,CALyB;EAMvC;EACAY,MAAM,EAAER,QAAQ,CAACP,iBAAD,EAAoB,KAApB,CAPuB;EAQvCgB,GAAG,EAAET,QAAQ,CAACJ,gBAAD,EAAmB,KAAnB,CAR0B;EASvC;EACAc,OAAO,EAAEV,QAAQ,CAACJ,gBAAD;AAVsB,CAAD,EAWrCJ,iBAXqC,CAAjC,C,CAWgB;AACvB;;AAEA,OAAO,IAAImB,YAAY,GAAG,aAAapB,GAAG,CAACqB,MAAJ,CAAW;EAChDC,IAAI,EAAErB,iBAD0C;EAEhDsB,MAAM,EAAE,CAACZ,kBAAD,CAFwC;EAGhDa,OAAO,EAAE,SAASA,OAAT,GAAmB;IAC1B,OAAO;MACLC,aAAa,EAAE;IADV,CAAP;EAGD,CAP+C;EAQhDZ,KAAK,EAAEA,KARyC;EAShDa,QAAQ,EAAE;IACRC,YAAY,EAAE,SAASA,YAAT,GAAwB;MACpC,OAAOf,WAAW,CAAC,KAAKI,IAAN,CAAlB;IACD,CAHO;IAIRY,YAAY,EAAE,SAASA,YAAT,GAAwB;MACpC,OAAOrB,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,KAAKM,OAAN,EAAe,CAAf,CAAR,EAA2B,CAA3B,CAAR,EAAuC,CAAvC,CAAP,GAAmD,CAA1D;IACD,CANO;IAORe,YAAY,EAAE,SAASA,YAAT,GAAwB;MACpC,IAAIC,KAAK,GAAG,KAAKH,YAAjB;MACAG,KAAK,GAAGA,KAAK,GAAG,QAAQC,MAAR,CAAeD,KAAf,EAAsB,KAAtB,EAA6BC,MAA7B,CAAoC,KAAKH,YAAzC,EAAuD,GAAvD,CAAH,GAAiE,IAA9E;MACA,OAAOE,KAAK,GAAG;QACbE,WAAW,EAAEF,KADA;QAEbG,YAAY,EAAEH;MAFD,CAAH,GAGR,EAHJ;IAID;EAdO,CATsC;EAyBhDI,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;IACzB,IAAIC,MAAM,GAAGD,CAAC,CAAC,KAAD,EAAQ;MACpBE,WAAW,EAAE,sBADO;MAEpBC,KAAK,EAAE,KAAKT;IAFQ,CAAR,EAGX,KAAKU,aAAL,EAHW,CAAd;IAIA,OAAOJ,CAAC,CAAC,KAAKjB,GAAN,EAAW;MACjBmB,WAAW,EAAE,gBADI;MAEjBG,KAAK,EAAE;QACLC,IAAI,EAAE;MADD;IAFU,CAAX,EAKL,CAACL,MAAD,CALK,CAAR;EAMD;AApC+C,CAAX,CAAhC"},"metadata":{},"sourceType":"module"}