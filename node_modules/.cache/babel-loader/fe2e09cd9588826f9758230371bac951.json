{"ast":null,"code":"import { Vue } from '../vue';\nimport { SLOT_NAME_DEFAULT } from '../constants/slots';\nimport { hasNormalizedSlot as _hasNormalizedSlot, normalizeSlot as _normalizeSlot } from '../utils/normalize-slot';\nimport { concat } from '../utils/array'; // @vue/component\n\nexport var normalizeSlotMixin = Vue.extend({\n  methods: {\n    // Returns `true` if the either a `$scopedSlot` or `$slot` exists with the specified name\n    // `name` can be a string name or an array of names\n    hasNormalizedSlot: function hasNormalizedSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SLOT_NAME_DEFAULT;\n      var scopedSlots = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.$scopedSlots;\n      var slots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$slots;\n      return _hasNormalizedSlot(name, scopedSlots, slots);\n    },\n    // Returns an array of rendered VNodes if slot found, otherwise `undefined`\n    // `name` can be a string name or an array of names\n    normalizeSlot: function normalizeSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SLOT_NAME_DEFAULT;\n      var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var scopedSlots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$scopedSlots;\n      var slots = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.$slots;\n\n      var vNodes = _normalizeSlot(name, scope, scopedSlots, slots);\n\n      return vNodes ? concat(vNodes) : vNodes;\n    }\n  }\n});","map":{"version":3,"names":["Vue","SLOT_NAME_DEFAULT","hasNormalizedSlot","_hasNormalizedSlot","normalizeSlot","_normalizeSlot","concat","normalizeSlotMixin","extend","methods","name","arguments","length","undefined","scopedSlots","$scopedSlots","slots","$slots","scope","vNodes"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"],"sourcesContent":["import { Vue } from '../vue';\nimport { SLOT_NAME_DEFAULT } from '../constants/slots';\nimport { hasNormalizedSlot as _hasNormalizedSlot, normalizeSlot as _normalizeSlot } from '../utils/normalize-slot';\nimport { concat } from '../utils/array'; // @vue/component\n\nexport var normalizeSlotMixin = Vue.extend({\n  methods: {\n    // Returns `true` if the either a `$scopedSlot` or `$slot` exists with the specified name\n    // `name` can be a string name or an array of names\n    hasNormalizedSlot: function hasNormalizedSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SLOT_NAME_DEFAULT;\n      var scopedSlots = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.$scopedSlots;\n      var slots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$slots;\n      return _hasNormalizedSlot(name, scopedSlots, slots);\n    },\n    // Returns an array of rendered VNodes if slot found, otherwise `undefined`\n    // `name` can be a string name or an array of names\n    normalizeSlot: function normalizeSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SLOT_NAME_DEFAULT;\n      var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var scopedSlots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$scopedSlots;\n      var slots = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.$slots;\n\n      var vNodes = _normalizeSlot(name, scope, scopedSlots, slots);\n\n      return vNodes ? concat(vNodes) : vNodes;\n    }\n  }\n});"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,iBAAiB,IAAIC,kBAA9B,EAAkDC,aAAa,IAAIC,cAAnE,QAAyF,yBAAzF;AACA,SAASC,MAAT,QAAuB,gBAAvB,C,CAAyC;;AAEzC,OAAO,IAAIC,kBAAkB,GAAGP,GAAG,CAACQ,MAAJ,CAAW;EACzCC,OAAO,EAAE;IACP;IACA;IACAP,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;MAC9C,IAAIQ,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEV,iBAA/E;MACA,IAAIa,WAAW,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAKI,YAA3F;MACA,IAAIC,KAAK,GAAGL,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAKM,MAArF;MACA,OAAOd,kBAAkB,CAACO,IAAD,EAAOI,WAAP,EAAoBE,KAApB,CAAzB;IACD,CARM;IASP;IACA;IACAZ,aAAa,EAAE,SAASA,aAAT,GAAyB;MACtC,IAAIM,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEV,iBAA/E;MACA,IAAIiB,KAAK,GAAGP,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;MACA,IAAIG,WAAW,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAKI,YAA3F;MACA,IAAIC,KAAK,GAAGL,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAKM,MAArF;;MAEA,IAAIE,MAAM,GAAGd,cAAc,CAACK,IAAD,EAAOQ,KAAP,EAAcJ,WAAd,EAA2BE,KAA3B,CAA3B;;MAEA,OAAOG,MAAM,GAAGb,MAAM,CAACa,MAAD,CAAT,GAAoBA,MAAjC;IACD;EApBM;AADgC,CAAX,CAAzB"},"metadata":{},"sourceType":"module"}