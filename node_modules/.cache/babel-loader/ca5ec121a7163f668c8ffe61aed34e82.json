{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { NAME_FORM_GROUP } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACE_SPLIT } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_DESCRIPTION, SLOT_NAME_INVALID_FEEDBACK, SLOT_NAME_LABEL, SLOT_NAME_VALID_FEEDBACK } from '../../constants/slots';\nimport { arrayIncludes } from '../../utils/array';\nimport { getBreakpointsUpCached } from '../../utils/config';\nimport { cssEscape } from '../../utils/css-escape';\nimport { select, selectAll, isVisible, setAttr, removeAttr, getAttr, attemptFocus } from '../../utils/dom';\nimport { identity } from '../../utils/identity';\nimport { isBoolean } from '../../utils/inspect';\nimport { toInteger } from '../../utils/number';\nimport { create, keys, sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable, suffixPropName } from '../../utils/props';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BCol } from '../layout/col';\nimport { BFormRow } from '../layout/form-row';\nimport { BFormText } from '../form/form-text';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormValidFeedback } from '../form/form-valid-feedback'; // --- Constants ---\n\nvar INPUTS = ['input', 'select', 'textarea']; // Selector for finding first input in the form group\n\nvar INPUT_SELECTOR = INPUTS.map(function (v) {\n  return \"\".concat(v, \":not([disabled])\");\n}).join(); // A list of interactive elements (tag names) inside `<b-form-group>`'s legend\n\nvar LEGEND_INTERACTIVE_ELEMENTS = [].concat(INPUTS, ['a', 'button', 'label']); // --- Props ---\n// Prop generator for lazy generation of props\n\nexport var generateProps = function generateProps() {\n  return makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), formStateProps), getBreakpointsUpCached().reduce(function (props, breakpoint) {\n    // i.e. 'content-cols', 'content-cols-sm', 'content-cols-md', ...\n    props[suffixPropName(breakpoint, 'contentCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING); // i.e. 'label-align', 'label-align-sm', 'label-align-md', ...\n\n    props[suffixPropName(breakpoint, 'labelAlign')] = makeProp(PROP_TYPE_STRING); // i.e. 'label-cols', 'label-cols-sm', 'label-cols-md', ...\n\n    props[suffixPropName(breakpoint, 'labelCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING);\n    return props;\n  }, create(null))), {}, {\n    description: makeProp(PROP_TYPE_STRING),\n    disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n    feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n    invalidFeedback: makeProp(PROP_TYPE_STRING),\n    label: makeProp(PROP_TYPE_STRING),\n    labelClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n    labelFor: makeProp(PROP_TYPE_STRING),\n    labelSize: makeProp(PROP_TYPE_STRING),\n    labelSrOnly: makeProp(PROP_TYPE_BOOLEAN, false),\n    tooltip: makeProp(PROP_TYPE_BOOLEAN, false),\n    validFeedback: makeProp(PROP_TYPE_STRING),\n    validated: makeProp(PROP_TYPE_BOOLEAN, false)\n  })), NAME_FORM_GROUP);\n}; // --- Main component ---\n// We do not use `Vue.extend()` here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\nexport var BFormGroup = {\n  name: NAME_FORM_GROUP,\n  mixins: [idMixin, formStateMixin, normalizeSlotMixin],\n\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n\n  data: function data() {\n    return {\n      ariaDescribedby: null\n    };\n  },\n  computed: {\n    contentColProps: function contentColProps() {\n      return this.getColProps(this.$props, 'content');\n    },\n    labelAlignClasses: function labelAlignClasses() {\n      return this.getAlignClasses(this.$props, 'label');\n    },\n    labelColProps: function labelColProps() {\n      return this.getColProps(this.$props, 'label');\n    },\n    isHorizontal: function isHorizontal() {\n      // Determine if the form group will be rendered horizontal\n      // based on the existence of 'content-col' or 'label-col' props\n      return keys(this.contentColProps).length > 0 || keys(this.labelColProps).length > 0;\n    }\n  },\n  watch: {\n    ariaDescribedby: function ariaDescribedby(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.updateAriaDescribedby(newValue, oldValue);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      // Set `aria-describedby` on the input specified by `labelFor`\n      // We do this in a `$nextTick()` to ensure the children have finished rendering\n      _this.updateAriaDescribedby(_this.ariaDescribedby);\n    });\n  },\n  methods: {\n    getAlignClasses: function getAlignClasses(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Align\"))] || null;\n\n        if (propValue) {\n          result.push(['text', breakpoint, propValue].filter(identity).join('-'));\n        }\n\n        return result;\n      }, []);\n    },\n    getColProps: function getColProps(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Cols\"))]; // Handle case where the prop's value is an empty string,\n        // which represents `true`\n\n        propValue = propValue === '' ? true : propValue || false;\n\n        if (!isBoolean(propValue) && propValue !== 'auto') {\n          // Convert to column size to number\n          propValue = toInteger(propValue, 0); // Ensure column size is greater than `0`\n\n          propValue = propValue > 0 ? propValue : false;\n        } // Add the prop to the list of props to give to `<b-col>`\n        // If breakpoint is '' (`${prefix}Cols` is `true`), then we use\n        // the 'col' prop to make equal width at 'xs'\n\n\n        if (propValue) {\n          result[breakpoint || (isBoolean(propValue) ? 'col' : 'cols')] = propValue;\n        }\n\n        return result;\n      }, {});\n    },\n    // Sets the `aria-describedby` attribute on the input if `labelFor` is set\n    // Optionally accepts a string of IDs to remove as the second parameter\n    // Preserves any `aria-describedby` value(s) user may have on input\n    updateAriaDescribedby: function updateAriaDescribedby(newValue, oldValue) {\n      var labelFor = this.labelFor;\n\n      if (IS_BROWSER && labelFor) {\n        // We need to escape `labelFor` since it can be user-provided\n        var $input = select(\"#\".concat(cssEscape(labelFor)), this.$refs.content);\n\n        if ($input) {\n          var attr = 'aria-describedby';\n          var newIds = (newValue || '').split(RX_SPACE_SPLIT);\n          var oldIds = (oldValue || '').split(RX_SPACE_SPLIT); // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n\n          var ids = (getAttr($input, attr) || '').split(RX_SPACE_SPLIT).filter(function (id) {\n            return !arrayIncludes(oldIds, id);\n          }).concat(newIds).filter(function (id, index, ids) {\n            return ids.indexOf(id) === index;\n          }).filter(identity).join(' ').trim();\n\n          if (ids) {\n            setAttr($input, attr, ids);\n          } else {\n            removeAttr($input, attr);\n          }\n        }\n      }\n    },\n    onLegendClick: function onLegendClick(event) {\n      // Don't do anything if `labelFor` is set\n\n      /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n      if (this.labelFor) {\n        return;\n      }\n\n      var target = event.target;\n      var tagName = target ? target.tagName : ''; // If clicked an interactive element inside legend,\n      // we just let the default happen\n\n      /* istanbul ignore next */\n\n      if (LEGEND_INTERACTIVE_ELEMENTS.indexOf(tagName) !== -1) {\n        return;\n      } // If only a single input, focus it, emulating label behaviour\n\n\n      var inputs = selectAll(INPUT_SELECTOR, this.$refs.content).filter(isVisible);\n\n      if (inputs.length === 1) {\n        attemptFocus(inputs[0]);\n      }\n    }\n  },\n  render: function render(h) {\n    var state = this.computedState,\n        feedbackAriaLive = this.feedbackAriaLive,\n        isHorizontal = this.isHorizontal,\n        labelFor = this.labelFor,\n        normalizeSlot = this.normalizeSlot,\n        safeId = this.safeId,\n        tooltip = this.tooltip;\n    var id = safeId();\n    var isFieldset = !labelFor;\n    var $label = h();\n    var labelContent = normalizeSlot(SLOT_NAME_LABEL) || this.label;\n    var labelId = labelContent ? safeId('_BV_label_') : null;\n\n    if (labelContent || isHorizontal) {\n      var labelSize = this.labelSize,\n          labelColProps = this.labelColProps;\n      var labelTag = isFieldset ? 'legend' : 'label';\n\n      if (this.labelSrOnly) {\n        if (labelContent) {\n          $label = h(labelTag, {\n            class: 'sr-only',\n            attrs: {\n              id: labelId,\n              for: labelFor || null\n            }\n          }, [labelContent]);\n        }\n\n        $label = h(isHorizontal ? BCol : 'div', {\n          props: isHorizontal ? labelColProps : {}\n        }, [$label]);\n      } else {\n        $label = h(isHorizontal ? BCol : labelTag, {\n          on: isFieldset ? {\n            click: this.onLegendClick\n          } : {},\n          props: isHorizontal ? _objectSpread(_objectSpread({}, labelColProps), {}, {\n            tag: labelTag\n          }) : {},\n          attrs: {\n            id: labelId,\n            for: labelFor || null,\n            // We add a `tabindex` to legend so that screen readers\n            // will properly read the `aria-labelledby` in IE\n            tabindex: isFieldset ? '-1' : null\n          },\n          class: [// Hide the focus ring on the legend\n          isFieldset ? 'bv-no-focus-ring' : '', // When horizontal or if a legend is rendered, add 'col-form-label' class\n          // for correct sizing as Bootstrap has inconsistent font styling for\n          // legend in non-horizontal form groups\n          // See: https://github.com/twbs/bootstrap/issues/27805\n          isHorizontal || isFieldset ? 'col-form-label' : '', // Emulate label padding top of `0` on legend when not horizontal\n          !isHorizontal && isFieldset ? 'pt-0' : '', // If not horizontal and not a legend, we add 'd-block' class to label\n          // so that label-align works\n          !isHorizontal && !isFieldset ? 'd-block' : '', labelSize ? \"col-form-label-\".concat(labelSize) : '', this.labelAlignClasses, this.labelClass]\n        }, [labelContent]);\n      }\n    }\n\n    var $invalidFeedback = h();\n    var invalidFeedbackContent = normalizeSlot(SLOT_NAME_INVALID_FEEDBACK) || this.invalidFeedback;\n    var invalidFeedbackId = invalidFeedbackContent ? safeId('_BV_feedback_invalid_') : null;\n\n    if (invalidFeedbackContent) {\n      $invalidFeedback = h(BFormInvalidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: invalidFeedbackId,\n          // If state is explicitly `false`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: invalidFeedbackContent ? '-1' : null\n        }\n      }, [invalidFeedbackContent]);\n    }\n\n    var $validFeedback = h();\n    var validFeedbackContent = normalizeSlot(SLOT_NAME_VALID_FEEDBACK) || this.validFeedback;\n    var validFeedbackId = validFeedbackContent ? safeId('_BV_feedback_valid_') : null;\n\n    if (validFeedbackContent) {\n      $validFeedback = h(BFormValidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: validFeedbackId,\n          // If state is explicitly `true`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: validFeedbackContent ? '-1' : null\n        }\n      }, [validFeedbackContent]);\n    }\n\n    var $description = h();\n    var descriptionContent = normalizeSlot(SLOT_NAME_DESCRIPTION) || this.description;\n    var descriptionId = descriptionContent ? safeId('_BV_description_') : null;\n\n    if (descriptionContent) {\n      $description = h(BFormText, {\n        attrs: {\n          id: descriptionId,\n          tabindex: '-1'\n        }\n      }, [descriptionContent]);\n    } // Update `ariaDescribedby`\n    // Screen readers will read out any content linked to by `aria-describedby`\n    // even if the content is hidden with `display: none;`, hence we only include\n    // feedback IDs if the form group's state is explicitly valid or invalid\n\n\n    var ariaDescribedby = this.ariaDescribedby = [descriptionId, state === false ? invalidFeedbackId : null, state === true ? validFeedbackId : null].filter(identity).join(' ') || null;\n    var $content = h(isHorizontal ? BCol : 'div', {\n      props: isHorizontal ? this.contentColProps : {},\n      ref: 'content'\n    }, [normalizeSlot(SLOT_NAME_DEFAULT, {\n      ariaDescribedby: ariaDescribedby,\n      descriptionId: descriptionId,\n      id: id,\n      labelId: labelId\n    }) || h(), $invalidFeedback, $validFeedback, $description]); // Return it wrapped in a form group\n    // Note: Fieldsets do not support adding `row` or `form-row` directly\n    // to them due to browser specific render issues, so we move the `form-row`\n    // to an inner wrapper div when horizontal and using a fieldset\n\n    return h(isFieldset ? 'fieldset' : isHorizontal ? BFormRow : 'div', {\n      staticClass: 'form-group',\n      class: [{\n        'was-validated': this.validated\n      }, this.stateClass],\n      attrs: {\n        id: id,\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedAriaInvalid,\n        // Only apply `aria-labelledby` if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? labelId : null\n      }\n    }, isHorizontal && isFieldset ? [h(BFormRow, [$label, $content])] : [$label, $content]);\n  }\n};","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","NAME_FORM_GROUP","IS_BROWSER","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_NUMBER_STRING","PROP_TYPE_STRING","RX_SPACE_SPLIT","SLOT_NAME_DEFAULT","SLOT_NAME_DESCRIPTION","SLOT_NAME_INVALID_FEEDBACK","SLOT_NAME_LABEL","SLOT_NAME_VALID_FEEDBACK","arrayIncludes","getBreakpointsUpCached","cssEscape","select","selectAll","isVisible","setAttr","removeAttr","getAttr","attemptFocus","identity","isBoolean","toInteger","create","sortKeys","makeProp","makePropsConfigurable","suffixPropName","formStateMixin","props","formStateProps","idMixin","idProps","normalizeSlotMixin","BCol","BFormRow","BFormText","BFormInvalidFeedback","BFormValidFeedback","INPUTS","INPUT_SELECTOR","map","v","concat","join","LEGEND_INTERACTIVE_ELEMENTS","generateProps","reduce","breakpoint","description","disabled","feedbackAriaLive","invalidFeedback","label","labelClass","labelFor","labelSize","labelSrOnly","tooltip","validFeedback","validated","BFormGroup","name","mixins","data","ariaDescribedby","computed","contentColProps","getColProps","$props","labelAlignClasses","getAlignClasses","labelColProps","isHorizontal","watch","newValue","oldValue","updateAriaDescribedby","mounted","_this","$nextTick","methods","prefix","result","propValue","$input","$refs","content","attr","newIds","split","oldIds","ids","id","index","indexOf","trim","onLegendClick","event","tagName","inputs","render","h","state","computedState","normalizeSlot","safeId","isFieldset","$label","labelContent","labelId","labelTag","class","attrs","for","on","click","tag","tabindex","$invalidFeedback","invalidFeedbackContent","invalidFeedbackId","ariaLive","$validFeedback","validFeedbackContent","validFeedbackId","$description","descriptionContent","descriptionId","$content","ref","staticClass","stateClass","role","computedAriaInvalid"],"sources":["C:/Users/rayss/dev-fullstack-i/node_modules/bootstrap-vue/esm/components/form-group/form-group.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { NAME_FORM_GROUP } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACE_SPLIT } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_DESCRIPTION, SLOT_NAME_INVALID_FEEDBACK, SLOT_NAME_LABEL, SLOT_NAME_VALID_FEEDBACK } from '../../constants/slots';\nimport { arrayIncludes } from '../../utils/array';\nimport { getBreakpointsUpCached } from '../../utils/config';\nimport { cssEscape } from '../../utils/css-escape';\nimport { select, selectAll, isVisible, setAttr, removeAttr, getAttr, attemptFocus } from '../../utils/dom';\nimport { identity } from '../../utils/identity';\nimport { isBoolean } from '../../utils/inspect';\nimport { toInteger } from '../../utils/number';\nimport { create, keys, sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable, suffixPropName } from '../../utils/props';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BCol } from '../layout/col';\nimport { BFormRow } from '../layout/form-row';\nimport { BFormText } from '../form/form-text';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormValidFeedback } from '../form/form-valid-feedback'; // --- Constants ---\n\nvar INPUTS = ['input', 'select', 'textarea']; // Selector for finding first input in the form group\n\nvar INPUT_SELECTOR = INPUTS.map(function (v) {\n  return \"\".concat(v, \":not([disabled])\");\n}).join(); // A list of interactive elements (tag names) inside `<b-form-group>`'s legend\n\nvar LEGEND_INTERACTIVE_ELEMENTS = [].concat(INPUTS, ['a', 'button', 'label']); // --- Props ---\n// Prop generator for lazy generation of props\n\nexport var generateProps = function generateProps() {\n  return makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), formStateProps), getBreakpointsUpCached().reduce(function (props, breakpoint) {\n    // i.e. 'content-cols', 'content-cols-sm', 'content-cols-md', ...\n    props[suffixPropName(breakpoint, 'contentCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING); // i.e. 'label-align', 'label-align-sm', 'label-align-md', ...\n\n    props[suffixPropName(breakpoint, 'labelAlign')] = makeProp(PROP_TYPE_STRING); // i.e. 'label-cols', 'label-cols-sm', 'label-cols-md', ...\n\n    props[suffixPropName(breakpoint, 'labelCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING);\n    return props;\n  }, create(null))), {}, {\n    description: makeProp(PROP_TYPE_STRING),\n    disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n    feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n    invalidFeedback: makeProp(PROP_TYPE_STRING),\n    label: makeProp(PROP_TYPE_STRING),\n    labelClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n    labelFor: makeProp(PROP_TYPE_STRING),\n    labelSize: makeProp(PROP_TYPE_STRING),\n    labelSrOnly: makeProp(PROP_TYPE_BOOLEAN, false),\n    tooltip: makeProp(PROP_TYPE_BOOLEAN, false),\n    validFeedback: makeProp(PROP_TYPE_STRING),\n    validated: makeProp(PROP_TYPE_BOOLEAN, false)\n  })), NAME_FORM_GROUP);\n}; // --- Main component ---\n// We do not use `Vue.extend()` here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\nexport var BFormGroup = {\n  name: NAME_FORM_GROUP,\n  mixins: [idMixin, formStateMixin, normalizeSlotMixin],\n\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n\n  data: function data() {\n    return {\n      ariaDescribedby: null\n    };\n  },\n  computed: {\n    contentColProps: function contentColProps() {\n      return this.getColProps(this.$props, 'content');\n    },\n    labelAlignClasses: function labelAlignClasses() {\n      return this.getAlignClasses(this.$props, 'label');\n    },\n    labelColProps: function labelColProps() {\n      return this.getColProps(this.$props, 'label');\n    },\n    isHorizontal: function isHorizontal() {\n      // Determine if the form group will be rendered horizontal\n      // based on the existence of 'content-col' or 'label-col' props\n      return keys(this.contentColProps).length > 0 || keys(this.labelColProps).length > 0;\n    }\n  },\n  watch: {\n    ariaDescribedby: function ariaDescribedby(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.updateAriaDescribedby(newValue, oldValue);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      // Set `aria-describedby` on the input specified by `labelFor`\n      // We do this in a `$nextTick()` to ensure the children have finished rendering\n      _this.updateAriaDescribedby(_this.ariaDescribedby);\n    });\n  },\n  methods: {\n    getAlignClasses: function getAlignClasses(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Align\"))] || null;\n\n        if (propValue) {\n          result.push(['text', breakpoint, propValue].filter(identity).join('-'));\n        }\n\n        return result;\n      }, []);\n    },\n    getColProps: function getColProps(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Cols\"))]; // Handle case where the prop's value is an empty string,\n        // which represents `true`\n\n        propValue = propValue === '' ? true : propValue || false;\n\n        if (!isBoolean(propValue) && propValue !== 'auto') {\n          // Convert to column size to number\n          propValue = toInteger(propValue, 0); // Ensure column size is greater than `0`\n\n          propValue = propValue > 0 ? propValue : false;\n        } // Add the prop to the list of props to give to `<b-col>`\n        // If breakpoint is '' (`${prefix}Cols` is `true`), then we use\n        // the 'col' prop to make equal width at 'xs'\n\n\n        if (propValue) {\n          result[breakpoint || (isBoolean(propValue) ? 'col' : 'cols')] = propValue;\n        }\n\n        return result;\n      }, {});\n    },\n    // Sets the `aria-describedby` attribute on the input if `labelFor` is set\n    // Optionally accepts a string of IDs to remove as the second parameter\n    // Preserves any `aria-describedby` value(s) user may have on input\n    updateAriaDescribedby: function updateAriaDescribedby(newValue, oldValue) {\n      var labelFor = this.labelFor;\n\n      if (IS_BROWSER && labelFor) {\n        // We need to escape `labelFor` since it can be user-provided\n        var $input = select(\"#\".concat(cssEscape(labelFor)), this.$refs.content);\n\n        if ($input) {\n          var attr = 'aria-describedby';\n          var newIds = (newValue || '').split(RX_SPACE_SPLIT);\n          var oldIds = (oldValue || '').split(RX_SPACE_SPLIT); // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n\n          var ids = (getAttr($input, attr) || '').split(RX_SPACE_SPLIT).filter(function (id) {\n            return !arrayIncludes(oldIds, id);\n          }).concat(newIds).filter(function (id, index, ids) {\n            return ids.indexOf(id) === index;\n          }).filter(identity).join(' ').trim();\n\n          if (ids) {\n            setAttr($input, attr, ids);\n          } else {\n            removeAttr($input, attr);\n          }\n        }\n      }\n    },\n    onLegendClick: function onLegendClick(event) {\n      // Don't do anything if `labelFor` is set\n\n      /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n      if (this.labelFor) {\n        return;\n      }\n\n      var target = event.target;\n      var tagName = target ? target.tagName : ''; // If clicked an interactive element inside legend,\n      // we just let the default happen\n\n      /* istanbul ignore next */\n\n      if (LEGEND_INTERACTIVE_ELEMENTS.indexOf(tagName) !== -1) {\n        return;\n      } // If only a single input, focus it, emulating label behaviour\n\n\n      var inputs = selectAll(INPUT_SELECTOR, this.$refs.content).filter(isVisible);\n\n      if (inputs.length === 1) {\n        attemptFocus(inputs[0]);\n      }\n    }\n  },\n  render: function render(h) {\n    var state = this.computedState,\n        feedbackAriaLive = this.feedbackAriaLive,\n        isHorizontal = this.isHorizontal,\n        labelFor = this.labelFor,\n        normalizeSlot = this.normalizeSlot,\n        safeId = this.safeId,\n        tooltip = this.tooltip;\n    var id = safeId();\n    var isFieldset = !labelFor;\n    var $label = h();\n    var labelContent = normalizeSlot(SLOT_NAME_LABEL) || this.label;\n    var labelId = labelContent ? safeId('_BV_label_') : null;\n\n    if (labelContent || isHorizontal) {\n      var labelSize = this.labelSize,\n          labelColProps = this.labelColProps;\n      var labelTag = isFieldset ? 'legend' : 'label';\n\n      if (this.labelSrOnly) {\n        if (labelContent) {\n          $label = h(labelTag, {\n            class: 'sr-only',\n            attrs: {\n              id: labelId,\n              for: labelFor || null\n            }\n          }, [labelContent]);\n        }\n\n        $label = h(isHorizontal ? BCol : 'div', {\n          props: isHorizontal ? labelColProps : {}\n        }, [$label]);\n      } else {\n        $label = h(isHorizontal ? BCol : labelTag, {\n          on: isFieldset ? {\n            click: this.onLegendClick\n          } : {},\n          props: isHorizontal ? _objectSpread(_objectSpread({}, labelColProps), {}, {\n            tag: labelTag\n          }) : {},\n          attrs: {\n            id: labelId,\n            for: labelFor || null,\n            // We add a `tabindex` to legend so that screen readers\n            // will properly read the `aria-labelledby` in IE\n            tabindex: isFieldset ? '-1' : null\n          },\n          class: [// Hide the focus ring on the legend\n          isFieldset ? 'bv-no-focus-ring' : '', // When horizontal or if a legend is rendered, add 'col-form-label' class\n          // for correct sizing as Bootstrap has inconsistent font styling for\n          // legend in non-horizontal form groups\n          // See: https://github.com/twbs/bootstrap/issues/27805\n          isHorizontal || isFieldset ? 'col-form-label' : '', // Emulate label padding top of `0` on legend when not horizontal\n          !isHorizontal && isFieldset ? 'pt-0' : '', // If not horizontal and not a legend, we add 'd-block' class to label\n          // so that label-align works\n          !isHorizontal && !isFieldset ? 'd-block' : '', labelSize ? \"col-form-label-\".concat(labelSize) : '', this.labelAlignClasses, this.labelClass]\n        }, [labelContent]);\n      }\n    }\n\n    var $invalidFeedback = h();\n    var invalidFeedbackContent = normalizeSlot(SLOT_NAME_INVALID_FEEDBACK) || this.invalidFeedback;\n    var invalidFeedbackId = invalidFeedbackContent ? safeId('_BV_feedback_invalid_') : null;\n\n    if (invalidFeedbackContent) {\n      $invalidFeedback = h(BFormInvalidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: invalidFeedbackId,\n          // If state is explicitly `false`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: invalidFeedbackContent ? '-1' : null\n        }\n      }, [invalidFeedbackContent]);\n    }\n\n    var $validFeedback = h();\n    var validFeedbackContent = normalizeSlot(SLOT_NAME_VALID_FEEDBACK) || this.validFeedback;\n    var validFeedbackId = validFeedbackContent ? safeId('_BV_feedback_valid_') : null;\n\n    if (validFeedbackContent) {\n      $validFeedback = h(BFormValidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: validFeedbackId,\n          // If state is explicitly `true`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: validFeedbackContent ? '-1' : null\n        }\n      }, [validFeedbackContent]);\n    }\n\n    var $description = h();\n    var descriptionContent = normalizeSlot(SLOT_NAME_DESCRIPTION) || this.description;\n    var descriptionId = descriptionContent ? safeId('_BV_description_') : null;\n\n    if (descriptionContent) {\n      $description = h(BFormText, {\n        attrs: {\n          id: descriptionId,\n          tabindex: '-1'\n        }\n      }, [descriptionContent]);\n    } // Update `ariaDescribedby`\n    // Screen readers will read out any content linked to by `aria-describedby`\n    // even if the content is hidden with `display: none;`, hence we only include\n    // feedback IDs if the form group's state is explicitly valid or invalid\n\n\n    var ariaDescribedby = this.ariaDescribedby = [descriptionId, state === false ? invalidFeedbackId : null, state === true ? validFeedbackId : null].filter(identity).join(' ') || null;\n    var $content = h(isHorizontal ? BCol : 'div', {\n      props: isHorizontal ? this.contentColProps : {},\n      ref: 'content'\n    }, [normalizeSlot(SLOT_NAME_DEFAULT, {\n      ariaDescribedby: ariaDescribedby,\n      descriptionId: descriptionId,\n      id: id,\n      labelId: labelId\n    }) || h(), $invalidFeedback, $validFeedback, $description]); // Return it wrapped in a form group\n    // Note: Fieldsets do not support adding `row` or `form-row` directly\n    // to them due to browser specific render issues, so we move the `form-row`\n    // to an inner wrapper div when horizontal and using a fieldset\n\n    return h(isFieldset ? 'fieldset' : isHorizontal ? BFormRow : 'div', {\n      staticClass: 'form-group',\n      class: [{\n        'was-validated': this.validated\n      }, this.stateClass],\n      attrs: {\n        id: id,\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedAriaInvalid,\n        // Only apply `aria-labelledby` if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? labelId : null\n      }\n    }, isHorizontal && isFieldset ? [h(BFormRow, [$label, $content])] : [$label, $content]);\n  }\n};"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;EAAgC,IAAIG,MAAM,CAACC,qBAAX,EAAkC;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;IAAoDC,cAAc,KAAKI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;MAAE,OAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;IAAiE,CAAjG,CAAf,CAAd,EAAkIP,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB,CAAlI;EAAmK;;EAAC,OAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IAAE,IAAIG,MAAM,GAAG,QAAQF,SAAS,CAACD,CAAD,CAAjB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;IAAuDA,CAAC,GAAG,CAAJ,GAAQf,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,CAAC,CAAlB,CAAP,CAA4BC,OAA5B,CAAoC,UAAUC,GAAV,EAAe;MAAEC,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;IAA4C,CAAjG,CAAR,GAA6GhB,MAAM,CAACkB,yBAAP,GAAmClB,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC,CAAnC,GAA+GlB,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;MAAEhB,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;IAAmF,CAApI,CAA5N;EAAoW;;EAAC,OAAON,MAAP;AAAgB;;AAE1f,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;EAAE,IAAIN,GAAG,IAAIK,GAAX,EAAgB;IAAErB,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;MAAEM,KAAK,EAAEA,KAAT;MAAgBhB,UAAU,EAAE,IAA5B;MAAkCiB,YAAY,EAAE,IAAhD;MAAsDC,QAAQ,EAAE;IAAhE,CAAhC;EAA0G,CAA5H,MAAkI;IAAEH,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;EAAmB;;EAAC,OAAOD,GAAP;AAAa;;AAEjN,SAASI,eAAT,QAAgC,4BAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,6BAAT,EAAwCC,iBAAxC,EAA2DC,+BAA3D,EAA4FC,gBAA5F,QAAoH,uBAApH;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,EAAmDC,0BAAnD,EAA+EC,eAA/E,EAAgGC,wBAAhG,QAAgI,uBAAhI;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgDC,UAAhD,EAA4DC,OAA5D,EAAqEC,YAArE,QAAyF,iBAAzF;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,EAAiBnD,IAAjB,EAAuBoD,QAAvB,QAAuC,oBAAvC;AACA,SAASC,QAAT,EAAmBC,qBAAnB,EAA0CC,cAA1C,QAAgE,mBAAhE;AACA,SAASC,cAAT,EAAyBC,KAAK,IAAIC,cAAlC,QAAwD,yBAAxD;AACA,SAASC,OAAT,EAAkBF,KAAK,IAAIG,OAA3B,QAA0C,iBAA1C;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,kBAAT,QAAmC,6BAAnC,C,CAAkE;;AAElE,IAAIC,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,CAAb,C,CAA8C;;AAE9C,IAAIC,cAAc,GAAGD,MAAM,CAACE,GAAP,CAAW,UAAUC,CAAV,EAAa;EAC3C,OAAO,GAAGC,MAAH,CAAUD,CAAV,EAAa,kBAAb,CAAP;AACD,CAFoB,EAElBE,IAFkB,EAArB,C,CAEW;;AAEX,IAAIC,2BAA2B,GAAG,GAAGF,MAAH,CAAUJ,MAAV,EAAkB,CAAC,GAAD,EAAM,QAAN,EAAgB,OAAhB,CAAlB,CAAlC,C,CAA+E;AAC/E;;AAEA,OAAO,IAAIO,aAAa,GAAG,SAASA,aAAT,GAAyB;EAClD,OAAOpB,qBAAqB,CAACF,QAAQ,CAAC1C,aAAa,CAACA,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKkD,OAAL,CAAd,EAA6BF,cAA7B,CAAd,EAA4DnB,sBAAsB,GAAGoC,MAAzB,CAAgC,UAAUlB,KAAV,EAAiBmB,UAAjB,EAA6B;IACxL;IACAnB,KAAK,CAACF,cAAc,CAACqB,UAAD,EAAa,aAAb,CAAf,CAAL,GAAmDvB,QAAQ,CAACvB,+BAAD,CAA3D,CAFwL,CAE1F;;IAE9F2B,KAAK,CAACF,cAAc,CAACqB,UAAD,EAAa,YAAb,CAAf,CAAL,GAAkDvB,QAAQ,CAACtB,gBAAD,CAA1D,CAJwL,CAI1G;;IAE9E0B,KAAK,CAACF,cAAc,CAACqB,UAAD,EAAa,WAAb,CAAf,CAAL,GAAiDvB,QAAQ,CAACvB,+BAAD,CAAzD;IACA,OAAO2B,KAAP;EACD,CAR4H,EAQ1HN,MAAM,CAAC,IAAD,CARoH,CAA5D,CAAd,EAQhC,EARgC,EAQ5B;IACrB0B,WAAW,EAAExB,QAAQ,CAACtB,gBAAD,CADA;IAErB+C,QAAQ,EAAEzB,QAAQ,CAACxB,iBAAD,EAAoB,KAApB,CAFG;IAGrBkD,gBAAgB,EAAE1B,QAAQ,CAACtB,gBAAD,EAAmB,WAAnB,CAHL;IAIrBiD,eAAe,EAAE3B,QAAQ,CAACtB,gBAAD,CAJJ;IAKrBkD,KAAK,EAAE5B,QAAQ,CAACtB,gBAAD,CALM;IAMrBmD,UAAU,EAAE7B,QAAQ,CAACzB,6BAAD,CANC;IAOrBuD,QAAQ,EAAE9B,QAAQ,CAACtB,gBAAD,CAPG;IAQrBqD,SAAS,EAAE/B,QAAQ,CAACtB,gBAAD,CARE;IASrBsD,WAAW,EAAEhC,QAAQ,CAACxB,iBAAD,EAAoB,KAApB,CATA;IAUrByD,OAAO,EAAEjC,QAAQ,CAACxB,iBAAD,EAAoB,KAApB,CAVI;IAWrB0D,aAAa,EAAElC,QAAQ,CAACtB,gBAAD,CAXF;IAYrByD,SAAS,EAAEnC,QAAQ,CAACxB,iBAAD,EAAoB,KAApB;EAZE,CAR4B,CAAd,CAAT,EAqBvBH,eArBuB,CAA5B;AAsBD,CAvBM,C,CAuBJ;AACH;AACA;AACA;;AAEA,OAAO,IAAI+D,UAAU,GAAG;EACtBC,IAAI,EAAEhE,eADgB;EAEtBiE,MAAM,EAAE,CAAChC,OAAD,EAAUH,cAAV,EAA0BK,kBAA1B,CAFc;;EAItB,IAAIJ,KAAJ,GAAY;IACV;IACA;IACA;IACA,OAAO,KAAKA,KAAZ,CAJU,CAIS;;IAEnB,OAAO,KAAKA,KAAL,GAAaiB,aAAa,EAAjC;EACD,CAXqB;;EAatBkB,IAAI,EAAE,SAASA,IAAT,GAAgB;IACpB,OAAO;MACLC,eAAe,EAAE;IADZ,CAAP;EAGD,CAjBqB;EAkBtBC,QAAQ,EAAE;IACRC,eAAe,EAAE,SAASA,eAAT,GAA2B;MAC1C,OAAO,KAAKC,WAAL,CAAiB,KAAKC,MAAtB,EAA8B,SAA9B,CAAP;IACD,CAHO;IAIRC,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;MAC9C,OAAO,KAAKC,eAAL,CAAqB,KAAKF,MAA1B,EAAkC,OAAlC,CAAP;IACD,CANO;IAORG,aAAa,EAAE,SAASA,aAAT,GAAyB;MACtC,OAAO,KAAKJ,WAAL,CAAiB,KAAKC,MAAtB,EAA8B,OAA9B,CAAP;IACD,CATO;IAURI,YAAY,EAAE,SAASA,YAAT,GAAwB;MACpC;MACA;MACA,OAAOrG,IAAI,CAAC,KAAK+F,eAAN,CAAJ,CAA2BjF,MAA3B,GAAoC,CAApC,IAAyCd,IAAI,CAAC,KAAKoG,aAAN,CAAJ,CAAyBtF,MAAzB,GAAkC,CAAlF;IACD;EAdO,CAlBY;EAkCtBwF,KAAK,EAAE;IACLT,eAAe,EAAE,SAASA,eAAT,CAAyBU,QAAzB,EAAmCC,QAAnC,EAA6C;MAC5D,IAAID,QAAQ,KAAKC,QAAjB,EAA2B;QACzB,KAAKC,qBAAL,CAA2BF,QAA3B,EAAqCC,QAArC;MACD;IACF;EALI,CAlCe;EAyCtBE,OAAO,EAAE,SAASA,OAAT,GAAmB;IAC1B,IAAIC,KAAK,GAAG,IAAZ;;IAEA,KAAKC,SAAL,CAAe,YAAY;MACzB;MACA;MACAD,KAAK,CAACF,qBAAN,CAA4BE,KAAK,CAACd,eAAlC;IACD,CAJD;EAKD,CAjDqB;EAkDtBgB,OAAO,EAAE;IACPV,eAAe,EAAE,SAASA,eAAT,CAAyB1C,KAAzB,EAAgCqD,MAAhC,EAAwC;MACvD,OAAOvE,sBAAsB,GAAGoC,MAAzB,CAAgC,UAAUoC,MAAV,EAAkBnC,UAAlB,EAA8B;QACnE,IAAIoC,SAAS,GAAGvD,KAAK,CAACF,cAAc,CAACqB,UAAD,EAAa,GAAGL,MAAH,CAAUuC,MAAV,EAAkB,OAAlB,CAAb,CAAf,CAAL,IAAiE,IAAjF;;QAEA,IAAIE,SAAJ,EAAe;UACbD,MAAM,CAACvG,IAAP,CAAY,CAAC,MAAD,EAASoE,UAAT,EAAqBoC,SAArB,EAAgC5G,MAAhC,CAAuC4C,QAAvC,EAAiDwB,IAAjD,CAAsD,GAAtD,CAAZ;QACD;;QAED,OAAOuC,MAAP;MACD,CARM,EAQJ,EARI,CAAP;IASD,CAXM;IAYPf,WAAW,EAAE,SAASA,WAAT,CAAqBvC,KAArB,EAA4BqD,MAA5B,EAAoC;MAC/C,OAAOvE,sBAAsB,GAAGoC,MAAzB,CAAgC,UAAUoC,MAAV,EAAkBnC,UAAlB,EAA8B;QACnE,IAAIoC,SAAS,GAAGvD,KAAK,CAACF,cAAc,CAACqB,UAAD,EAAa,GAAGL,MAAH,CAAUuC,MAAV,EAAkB,MAAlB,CAAb,CAAf,CAArB,CADmE,CACW;QAC9E;;QAEAE,SAAS,GAAGA,SAAS,KAAK,EAAd,GAAmB,IAAnB,GAA0BA,SAAS,IAAI,KAAnD;;QAEA,IAAI,CAAC/D,SAAS,CAAC+D,SAAD,CAAV,IAAyBA,SAAS,KAAK,MAA3C,EAAmD;UACjD;UACAA,SAAS,GAAG9D,SAAS,CAAC8D,SAAD,EAAY,CAAZ,CAArB,CAFiD,CAEZ;;UAErCA,SAAS,GAAGA,SAAS,GAAG,CAAZ,GAAgBA,SAAhB,GAA4B,KAAxC;QACD,CAXkE,CAWjE;QACF;QACA;;;QAGA,IAAIA,SAAJ,EAAe;UACbD,MAAM,CAACnC,UAAU,KAAK3B,SAAS,CAAC+D,SAAD,CAAT,GAAuB,KAAvB,GAA+B,MAApC,CAAX,CAAN,GAAgEA,SAAhE;QACD;;QAED,OAAOD,MAAP;MACD,CArBM,EAqBJ,EArBI,CAAP;IAsBD,CAnCM;IAoCP;IACA;IACA;IACAN,qBAAqB,EAAE,SAASA,qBAAT,CAA+BF,QAA/B,EAAyCC,QAAzC,EAAmD;MACxE,IAAIrB,QAAQ,GAAG,KAAKA,QAApB;;MAEA,IAAIxD,UAAU,IAAIwD,QAAlB,EAA4B;QAC1B;QACA,IAAI8B,MAAM,GAAGxE,MAAM,CAAC,IAAI8B,MAAJ,CAAW/B,SAAS,CAAC2C,QAAD,CAApB,CAAD,EAAkC,KAAK+B,KAAL,CAAWC,OAA7C,CAAnB;;QAEA,IAAIF,MAAJ,EAAY;UACV,IAAIG,IAAI,GAAG,kBAAX;UACA,IAAIC,MAAM,GAAG,CAACd,QAAQ,IAAI,EAAb,EAAiBe,KAAjB,CAAuBtF,cAAvB,CAAb;UACA,IAAIuF,MAAM,GAAG,CAACf,QAAQ,IAAI,EAAb,EAAiBc,KAAjB,CAAuBtF,cAAvB,CAAb,CAHU,CAG2C;UACrD;;UAEA,IAAIwF,GAAG,GAAG,CAAC1E,OAAO,CAACmE,MAAD,EAASG,IAAT,CAAP,IAAyB,EAA1B,EAA8BE,KAA9B,CAAoCtF,cAApC,EAAoD5B,MAApD,CAA2D,UAAUqH,EAAV,EAAc;YACjF,OAAO,CAACnF,aAAa,CAACiF,MAAD,EAASE,EAAT,CAArB;UACD,CAFS,EAEPlD,MAFO,CAEA8C,MAFA,EAEQjH,MAFR,CAEe,UAAUqH,EAAV,EAAcC,KAAd,EAAqBF,GAArB,EAA0B;YACjD,OAAOA,GAAG,CAACG,OAAJ,CAAYF,EAAZ,MAAoBC,KAA3B;UACD,CAJS,EAIPtH,MAJO,CAIA4C,QAJA,EAIUwB,IAJV,CAIe,GAJf,EAIoBoD,IAJpB,EAAV;;UAMA,IAAIJ,GAAJ,EAAS;YACP5E,OAAO,CAACqE,MAAD,EAASG,IAAT,EAAeI,GAAf,CAAP;UACD,CAFD,MAEO;YACL3E,UAAU,CAACoE,MAAD,EAASG,IAAT,CAAV;UACD;QACF;MACF;IACF,CAjEM;IAkEPS,aAAa,EAAE,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;MAC3C;;MAEA;MACA,IAAI,KAAK3C,QAAT,EAAmB;QACjB;MACD;;MAED,IAAIxE,MAAM,GAAGmH,KAAK,CAACnH,MAAnB;MACA,IAAIoH,OAAO,GAAGpH,MAAM,GAAGA,MAAM,CAACoH,OAAV,GAAoB,EAAxC,CAT2C,CASC;MAC5C;;MAEA;;MAEA,IAAItD,2BAA2B,CAACkD,OAA5B,CAAoCI,OAApC,MAAiD,CAAC,CAAtD,EAAyD;QACvD;MACD,CAhB0C,CAgBzC;;;MAGF,IAAIC,MAAM,GAAGtF,SAAS,CAAC0B,cAAD,EAAiB,KAAK8C,KAAL,CAAWC,OAA5B,CAAT,CAA8C/G,MAA9C,CAAqDuC,SAArD,CAAb;;MAEA,IAAIqF,MAAM,CAAClH,MAAP,KAAkB,CAAtB,EAAyB;QACvBiC,YAAY,CAACiF,MAAM,CAAC,CAAD,CAAP,CAAZ;MACD;IACF;EA1FM,CAlDa;EA8ItBC,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;IACzB,IAAIC,KAAK,GAAG,KAAKC,aAAjB;IAAA,IACIrD,gBAAgB,GAAG,KAAKA,gBAD5B;IAAA,IAEIsB,YAAY,GAAG,KAAKA,YAFxB;IAAA,IAGIlB,QAAQ,GAAG,KAAKA,QAHpB;IAAA,IAIIkD,aAAa,GAAG,KAAKA,aAJzB;IAAA,IAKIC,MAAM,GAAG,KAAKA,MALlB;IAAA,IAMIhD,OAAO,GAAG,KAAKA,OANnB;IAOA,IAAImC,EAAE,GAAGa,MAAM,EAAf;IACA,IAAIC,UAAU,GAAG,CAACpD,QAAlB;IACA,IAAIqD,MAAM,GAAGN,CAAC,EAAd;IACA,IAAIO,YAAY,GAAGJ,aAAa,CAACjG,eAAD,CAAb,IAAkC,KAAK6C,KAA1D;IACA,IAAIyD,OAAO,GAAGD,YAAY,GAAGH,MAAM,CAAC,YAAD,CAAT,GAA0B,IAApD;;IAEA,IAAIG,YAAY,IAAIpC,YAApB,EAAkC;MAChC,IAAIjB,SAAS,GAAG,KAAKA,SAArB;MAAA,IACIgB,aAAa,GAAG,KAAKA,aADzB;MAEA,IAAIuC,QAAQ,GAAGJ,UAAU,GAAG,QAAH,GAAc,OAAvC;;MAEA,IAAI,KAAKlD,WAAT,EAAsB;QACpB,IAAIoD,YAAJ,EAAkB;UAChBD,MAAM,GAAGN,CAAC,CAACS,QAAD,EAAW;YACnBC,KAAK,EAAE,SADY;YAEnBC,KAAK,EAAE;cACLpB,EAAE,EAAEiB,OADC;cAELI,GAAG,EAAE3D,QAAQ,IAAI;YAFZ;UAFY,CAAX,EAMP,CAACsD,YAAD,CANO,CAAV;QAOD;;QAEDD,MAAM,GAAGN,CAAC,CAAC7B,YAAY,GAAGvC,IAAH,GAAU,KAAvB,EAA8B;UACtCL,KAAK,EAAE4C,YAAY,GAAGD,aAAH,GAAmB;QADA,CAA9B,EAEP,CAACoC,MAAD,CAFO,CAAV;MAGD,CAdD,MAcO;QACLA,MAAM,GAAGN,CAAC,CAAC7B,YAAY,GAAGvC,IAAH,GAAU6E,QAAvB,EAAiC;UACzCI,EAAE,EAAER,UAAU,GAAG;YACfS,KAAK,EAAE,KAAKnB;UADG,CAAH,GAEV,EAHqC;UAIzCpE,KAAK,EAAE4C,YAAY,GAAG3F,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK0F,aAAL,CAAd,EAAmC,EAAnC,EAAuC;YACxE6C,GAAG,EAAEN;UADmE,CAAvC,CAAhB,GAEd,EANoC;UAOzCE,KAAK,EAAE;YACLpB,EAAE,EAAEiB,OADC;YAELI,GAAG,EAAE3D,QAAQ,IAAI,IAFZ;YAGL;YACA;YACA+D,QAAQ,EAAEX,UAAU,GAAG,IAAH,GAAU;UALzB,CAPkC;UAczCK,KAAK,EAAE,CAAC;UACRL,UAAU,GAAG,kBAAH,GAAwB,EAD3B,EAC+B;UACtC;UACA;UACA;UACAlC,YAAY,IAAIkC,UAAhB,GAA6B,gBAA7B,GAAgD,EALzC,EAK6C;UACpD,CAAClC,YAAD,IAAiBkC,UAAjB,GAA8B,MAA9B,GAAuC,EANhC,EAMoC;UAC3C;UACA,CAAClC,YAAD,IAAiB,CAACkC,UAAlB,GAA+B,SAA/B,GAA2C,EARpC,EAQwCnD,SAAS,GAAG,kBAAkBb,MAAlB,CAAyBa,SAAzB,CAAH,GAAyC,EAR1F,EAQ8F,KAAKc,iBARnG,EAQsH,KAAKhB,UAR3H;QAdkC,CAAjC,EAuBP,CAACuD,YAAD,CAvBO,CAAV;MAwBD;IACF;;IAED,IAAIU,gBAAgB,GAAGjB,CAAC,EAAxB;IACA,IAAIkB,sBAAsB,GAAGf,aAAa,CAAClG,0BAAD,CAAb,IAA6C,KAAK6C,eAA/E;IACA,IAAIqE,iBAAiB,GAAGD,sBAAsB,GAAGd,MAAM,CAAC,uBAAD,CAAT,GAAqC,IAAnF;;IAEA,IAAIc,sBAAJ,EAA4B;MAC1BD,gBAAgB,GAAGjB,CAAC,CAACjE,oBAAD,EAAuB;QACzCR,KAAK,EAAE;UACL6F,QAAQ,EAAEvE,gBADL;UAEL0C,EAAE,EAAE4B,iBAFC;UAGL;UACAlB,KAAK,EAAEA,KAJF;UAKL7C,OAAO,EAAEA;QALJ,CADkC;QAQzCuD,KAAK,EAAE;UACLK,QAAQ,EAAEE,sBAAsB,GAAG,IAAH,GAAU;QADrC;MARkC,CAAvB,EAWjB,CAACA,sBAAD,CAXiB,CAApB;IAYD;;IAED,IAAIG,cAAc,GAAGrB,CAAC,EAAtB;IACA,IAAIsB,oBAAoB,GAAGnB,aAAa,CAAChG,wBAAD,CAAb,IAA2C,KAAKkD,aAA3E;IACA,IAAIkE,eAAe,GAAGD,oBAAoB,GAAGlB,MAAM,CAAC,qBAAD,CAAT,GAAmC,IAA7E;;IAEA,IAAIkB,oBAAJ,EAA0B;MACxBD,cAAc,GAAGrB,CAAC,CAAChE,kBAAD,EAAqB;QACrCT,KAAK,EAAE;UACL6F,QAAQ,EAAEvE,gBADL;UAEL0C,EAAE,EAAEgC,eAFC;UAGL;UACAtB,KAAK,EAAEA,KAJF;UAKL7C,OAAO,EAAEA;QALJ,CAD8B;QAQrCuD,KAAK,EAAE;UACLK,QAAQ,EAAEM,oBAAoB,GAAG,IAAH,GAAU;QADnC;MAR8B,CAArB,EAWf,CAACA,oBAAD,CAXe,CAAlB;IAYD;;IAED,IAAIE,YAAY,GAAGxB,CAAC,EAApB;IACA,IAAIyB,kBAAkB,GAAGtB,aAAa,CAACnG,qBAAD,CAAb,IAAwC,KAAK2C,WAAtE;IACA,IAAI+E,aAAa,GAAGD,kBAAkB,GAAGrB,MAAM,CAAC,kBAAD,CAAT,GAAgC,IAAtE;;IAEA,IAAIqB,kBAAJ,EAAwB;MACtBD,YAAY,GAAGxB,CAAC,CAAClE,SAAD,EAAY;QAC1B6E,KAAK,EAAE;UACLpB,EAAE,EAAEmC,aADC;UAELV,QAAQ,EAAE;QAFL;MADmB,CAAZ,EAKb,CAACS,kBAAD,CALa,CAAhB;IAMD,CA9GwB,CA8GvB;IACF;IACA;IACA;;;IAGA,IAAI9D,eAAe,GAAG,KAAKA,eAAL,GAAuB,CAAC+D,aAAD,EAAgBzB,KAAK,KAAK,KAAV,GAAkBkB,iBAAlB,GAAsC,IAAtD,EAA4DlB,KAAK,KAAK,IAAV,GAAiBsB,eAAjB,GAAmC,IAA/F,EAAqGrJ,MAArG,CAA4G4C,QAA5G,EAAsHwB,IAAtH,CAA2H,GAA3H,KAAmI,IAAhL;IACA,IAAIqF,QAAQ,GAAG3B,CAAC,CAAC7B,YAAY,GAAGvC,IAAH,GAAU,KAAvB,EAA8B;MAC5CL,KAAK,EAAE4C,YAAY,GAAG,KAAKN,eAAR,GAA0B,EADD;MAE5C+D,GAAG,EAAE;IAFuC,CAA9B,EAGb,CAACzB,aAAa,CAACpG,iBAAD,EAAoB;MACnC4D,eAAe,EAAEA,eADkB;MAEnC+D,aAAa,EAAEA,aAFoB;MAGnCnC,EAAE,EAAEA,EAH+B;MAInCiB,OAAO,EAAEA;IAJ0B,CAApB,CAAb,IAKER,CAAC,EALJ,EAKQiB,gBALR,EAK0BI,cAL1B,EAK0CG,YAL1C,CAHa,CAAhB,CArHyB,CA6HoC;IAC7D;IACA;IACA;;IAEA,OAAOxB,CAAC,CAACK,UAAU,GAAG,UAAH,GAAgBlC,YAAY,GAAGtC,QAAH,GAAc,KAArD,EAA4D;MAClEgG,WAAW,EAAE,YADqD;MAElEnB,KAAK,EAAE,CAAC;QACN,iBAAiB,KAAKpD;MADhB,CAAD,EAEJ,KAAKwE,UAFD,CAF2D;MAKlEnB,KAAK,EAAE;QACLpB,EAAE,EAAEA,EADC;QAEL3C,QAAQ,EAAEyD,UAAU,GAAG,KAAKzD,QAAR,GAAmB,IAFlC;QAGLmF,IAAI,EAAE1B,UAAU,GAAG,IAAH,GAAU,OAHrB;QAIL,gBAAgB,KAAK2B,mBAJhB;QAKL;QACA;QACA,mBAAmB3B,UAAU,IAAIlC,YAAd,GAA6BqC,OAA7B,GAAuC;MAPrD;IAL2D,CAA5D,EAcLrC,YAAY,IAAIkC,UAAhB,GAA6B,CAACL,CAAC,CAACnE,QAAD,EAAW,CAACyE,MAAD,EAASqB,QAAT,CAAX,CAAF,CAA7B,GAAiE,CAACrB,MAAD,EAASqB,QAAT,CAd5D,CAAR;EAeD;AA/RqB,CAAjB"},"metadata":{},"sourceType":"module"}