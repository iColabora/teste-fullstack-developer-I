import { PropType, VNode } from 'vue';
import { Breakpoint, ColorVariant, TableField, TableItem, VerticalAlign } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    align: {
        type: PropType<VerticalAlign>;
    };
    caption: {
        type: StringConstructor;
    };
    captionTop: {
        type: BooleanConstructor;
        default: boolean;
    };
    borderless: {
        type: BooleanConstructor;
        default: boolean;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    borderVariant: {
        type: PropType<ColorVariant>;
    };
    dark: {
        type: BooleanConstructor;
        default: boolean;
    };
    fields: {
        type: PropType<TableField<Record<string, unknown>>[]>;
        default: () => never[];
    };
    footClone: {
        type: BooleanConstructor;
        default: boolean;
    };
    hover: {
        type: BooleanConstructor;
        default: boolean;
    };
    items: {
        type: PropType<TableItem<Record<string, unknown>>[]>;
        default: () => never[];
    };
    responsive: {
        type: PropType<boolean | Breakpoint>;
        default: boolean;
    };
    small: {
        type: BooleanConstructor;
        default: boolean;
    };
    striped: {
        type: BooleanConstructor;
        default: boolean;
    };
    variant: {
        type: PropType<ColorVariant>;
    };
}, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    align: {
        type: PropType<VerticalAlign>;
    };
    caption: {
        type: StringConstructor;
    };
    captionTop: {
        type: BooleanConstructor;
        default: boolean;
    };
    borderless: {
        type: BooleanConstructor;
        default: boolean;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    borderVariant: {
        type: PropType<ColorVariant>;
    };
    dark: {
        type: BooleanConstructor;
        default: boolean;
    };
    fields: {
        type: PropType<TableField<Record<string, unknown>>[]>;
        default: () => never[];
    };
    footClone: {
        type: BooleanConstructor;
        default: boolean;
    };
    hover: {
        type: BooleanConstructor;
        default: boolean;
    };
    items: {
        type: PropType<TableItem<Record<string, unknown>>[]>;
        default: () => never[];
    };
    responsive: {
        type: PropType<boolean | Breakpoint>;
        default: boolean;
    };
    small: {
        type: BooleanConstructor;
        default: boolean;
    };
    striped: {
        type: BooleanConstructor;
        default: boolean;
    };
    variant: {
        type: PropType<ColorVariant>;
    };
}>>, {
    small: boolean;
    dark: boolean;
    items: TableItem<Record<string, unknown>>[];
    hover: boolean;
    striped: boolean;
    bordered: boolean;
    borderless: boolean;
    captionTop: boolean;
    responsive: boolean | Breakpoint;
    fields: TableField<Record<string, unknown>>[];
    footClone: boolean;
}>;
export default _sfc_main;
