import { PropType } from 'vue';
import { ColorVariant } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    ariaDescribedby: {
        type: StringConstructor;
    };
    header: {
        type: StringConstructor;
    };
    headerClasses: {
        type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
        default: null;
    };
    headerTag: {
        type: StringConstructor;
        default: string;
    };
    headerVariant: {
        type: PropType<ColorVariant>;
        default: null;
    };
    id: {
        type: StringConstructor;
    };
}, {
    classes: import("vue").ComputedRef<{
        [x: string]: ColorVariant;
    }>;
    headerId: import("vue").ComputedRef<string | null>;
    headerRole: import("vue").ComputedRef<"heading" | null>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    ariaDescribedby: {
        type: StringConstructor;
    };
    header: {
        type: StringConstructor;
    };
    headerClasses: {
        type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
        default: null;
    };
    headerTag: {
        type: StringConstructor;
        default: string;
    };
    headerVariant: {
        type: PropType<ColorVariant>;
        default: null;
    };
    id: {
        type: StringConstructor;
    };
}>>, {
    headerTag: string;
    headerClasses: string | unknown[] | Record<string, any>;
    headerVariant: ColorVariant;
}>;
export default _sfc_main;
