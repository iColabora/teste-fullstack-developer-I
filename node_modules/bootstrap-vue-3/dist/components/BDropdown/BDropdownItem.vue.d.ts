import { PropType } from 'vue';
import { ColorVariant } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    active: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    href: {
        type: StringConstructor;
    };
    linkClass: {
        type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
    };
    rel: {
        type: StringConstructor;
        default: null;
    };
    target: {
        type: StringConstructor;
        default: string;
    };
    variant: {
        type: PropType<ColorVariant>;
        default: null;
    };
}, {
    classes: import("vue").ComputedRef<{
        [x: string]: boolean | ColorVariant;
        active: boolean;
        disabled: boolean;
    }>;
    tag: import("vue").ComputedRef<"button" | "b-link" | "a">;
    componentAttrs: import("vue").ComputedRef<{
        activeClass?: string | undefined;
        'aria-current': string | null;
        href: string | null | undefined;
        rel: string;
        type: string | null;
        target: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    active: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    href: {
        type: StringConstructor;
    };
    linkClass: {
        type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
    };
    rel: {
        type: StringConstructor;
        default: null;
    };
    target: {
        type: StringConstructor;
        default: string;
    };
    variant: {
        type: PropType<ColorVariant>;
        default: null;
    };
}>> & {
    onClick?: ((...args: any[]) => any) | undefined;
}, {
    variant: ColorVariant;
    disabled: boolean;
    active: boolean;
    rel: string;
    target: string;
}>;
export default _sfc_main;
