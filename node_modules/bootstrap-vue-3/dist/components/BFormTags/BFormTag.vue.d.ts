declare const _sfc_main: import("vue").DefineComponent<{
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    id: {
        type: StringConstructor;
    };
    noRemove: {
        type: BooleanConstructor;
        default: boolean;
    };
    pill: {
        type: BooleanConstructor;
        default: boolean;
    };
    removeLabel: {
        type: StringConstructor;
        default: string;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    title: {
        type: StringConstructor;
    };
    variant: {
        type: StringConstructor;
        default: string;
    };
}, {
    props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
        disabled: {
            type: BooleanConstructor;
            default: boolean;
        };
        id: {
            type: StringConstructor;
        };
        noRemove: {
            type: BooleanConstructor;
            default: boolean;
        };
        pill: {
            type: BooleanConstructor;
            default: boolean;
        };
        removeLabel: {
            type: StringConstructor;
            default: string;
        };
        tag: {
            type: StringConstructor;
            default: string;
        };
        title: {
            type: StringConstructor;
        };
        variant: {
            type: StringConstructor;
            default: string;
        };
    }>> & {
        onRemove?: ((...args: any[]) => any) | undefined;
    }>>;
    slots: Readonly<{
        [name: string]: import("vue").Slot | undefined;
    }>;
    tagText: import("vue").ComputedRef<string | import("vue").VNodeArrayChildren | {
        [name: string]: unknown;
        $stable?: boolean | undefined;
    } | undefined>;
    computedId: import("vue").ComputedRef<string>;
    taglabelId: import("vue").ComputedRef<string>;
    classes: import("vue").ComputedRef<(string | {
        'text-dark': boolean;
        'rounded-pill': boolean;
        disabled: boolean;
    })[]>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "remove"[], "remove", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    id: {
        type: StringConstructor;
    };
    noRemove: {
        type: BooleanConstructor;
        default: boolean;
    };
    pill: {
        type: BooleanConstructor;
        default: boolean;
    };
    removeLabel: {
        type: StringConstructor;
        default: string;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    title: {
        type: StringConstructor;
    };
    variant: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    onRemove?: ((...args: any[]) => any) | undefined;
}, {
    tag: string;
    variant: string;
    disabled: boolean;
    pill: boolean;
    noRemove: boolean;
    removeLabel: string;
}>;
export default _sfc_main;
