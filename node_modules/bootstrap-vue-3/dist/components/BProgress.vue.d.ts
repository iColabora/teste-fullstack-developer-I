import { ColorVariant } from '../types';
import { InjectionKey, PropType } from 'vue';
export interface ParentData {
    animated: boolean;
    max: number | string;
    showProgress: boolean;
    showValue: boolean;
    striped: boolean;
}
export declare const injectionKey: InjectionKey<ParentData>;
declare const _sfc_main: import("vue").DefineComponent<{
    animated: {
        type: BooleanConstructor;
        default: boolean;
    };
    max: {
        type: (StringConstructor | NumberConstructor)[];
    };
    height: {
        type: StringConstructor;
    };
    precision: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    showProgress: {
        type: BooleanConstructor;
        default: boolean;
    };
    showValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    striped: {
        type: BooleanConstructor;
        default: boolean;
    };
    value: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    variant: {
        type: PropType<ColorVariant>;
    };
}, void, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    animated: {
        type: BooleanConstructor;
        default: boolean;
    };
    max: {
        type: (StringConstructor | NumberConstructor)[];
    };
    height: {
        type: StringConstructor;
    };
    precision: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    showProgress: {
        type: BooleanConstructor;
        default: boolean;
    };
    showValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    striped: {
        type: BooleanConstructor;
        default: boolean;
    };
    value: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    variant: {
        type: PropType<ColorVariant>;
    };
}>>, {
    value: string | number;
    animated: boolean;
    precision: string | number;
    showProgress: boolean;
    showValue: boolean;
    striped: boolean;
}>;
export default _sfc_main;
